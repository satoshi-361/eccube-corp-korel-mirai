<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2022-12-15 15:50:07              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2_42\Service;use Doctrine\ORM\EntityManagerInterface;use Plugin\AmazonPayV2_42\Entity\Master\AmazonStatus;use Plugin\AmazonPayV2_42\Entity\AmazonTrading;use Plugin\AmazonPayV2_42\Repository\ConfigRepository;use Plugin\AmazonPayV2_42\Service\AmazonOrderHelper;use Plugin\AmazonPayV2_42\Service\AmazonRequestService;use Eccube\Common\EccubeConfig;use Eccube\Entity\Master\OrderStatus;use Eccube\Repository\CustomerRepository;use Eccube\Repository\OrderRepository;use Eccube\Repository\Master\OrderStatusRepository;use Eccube\Service\MailService;use Eccube\Service\PurchaseFlow\PurchaseFlow;use Eccube\Service\PurchaseFlow\PurchaseContext;use Symfony\Component\DependencyInjection\ContainerInterface;use Symfony\Component\Routing\RouterInterface;use Symfony\Component\Routing\Generator\UrlGeneratorInterface;use Doctrine\DBAL\LockMode;class AmazonIPNService{private $sessionAmazonProfileKey = 'amazon_pay_v2.profile';private $sessionAmazonCheckoutSessionIdKey = 'amazon_pay_v2.checkout_session_id';private $sessionAmazonCustomerParamKey = 'amazon_pay_v2.customer_regist_v2';protected $orderRepository;protected $entityManager;public function __construct(EccubeConfig $eccubeConfig, MailService $mailService, CustomerRepository $customerRepository, OrderRepository $orderRepository, OrderStatusRepository $orderStatusRepository, EntityManagerInterface $entityManager, PurchaseFlow $shoppingPurchaseFlow, ConfigRepository $configRepository, AmazonOrderHelper $amazonOrderHelper, AmazonRequestService $amazonRequestService, ContainerInterface $container){goto KzMkr;TSYBw:$this->customerRepository = $customerRepository;goto IEqON;SFBd3:$this->amazonRequestService = $amazonRequestService;goto gi2il;x_F2u:$this->mailService = $mailService;goto TSYBw;gi2il:$this->container = $container;goto joYsk;KzMkr:$this->eccubeConfig = $eccubeConfig;goto x_F2u;vzE3Q:$this->orderStatusRepository = $orderStatusRepository;goto NQbLD;NQbLD:$this->entityManager = $entityManager;goto QSaSQ;me8vk:$this->configRepository = $configRepository;goto wPfhQ;joYsk:$this->Config = $this->configRepository->get();goto QKgmQ;QSaSQ:$this->purchaseFlow = $shoppingPurchaseFlow;goto me8vk;IEqON:$this->orderRepository = $orderRepository;goto vzE3Q;wPfhQ:$this->amazonOrderHelper = $amazonOrderHelper;goto SFBd3;QKgmQ:}public function mainProcess($arrParam){goto WnpXA;r2Q5J:tAyMl:goto by0Oj;Xvq8B:if (!($Order && ($chargeResponseState == 'Authorized' || $chargeResponseState == 'Captured') && $Order->getAmazonPayV2SessionTemp())) {goto NNjvH;}goto msZ55;ddBtt:$chargeResponseState = $chargeResponse->statusDetails->state;goto utr3a;q_3_h:$AmazonTradings = $Order->getAmazonPayV2AmazonTradings();goto zxwS2;X2G48:logs('amazon_pay_v2')->info('AmazonIPNService::返金処理 start');goto s07Vf;M6wXU:goto xydkX;goto hL9SR;eFPxv:if ($arrParam['ObjectType'] == 'CHARGE') {goto qXwaJ;}goto U5Yxf;by0Oj:if (!($chargeResponseState == 'Canceled' && in_array($objectId, $arrChargeId))) {goto PvXd_;}goto VuPUG;JWQxQ:logs('amazon_pay_v2')->info('AmazonIPNService::初回注文処理 end');goto DIwyl;S0Vs7:VzlvR:goto aLTCc;vKMpv:$chargeResponse = $this->amazonRequestService->getCharge($objectId);goto ddBtt;zetAU:$objectId = $arrParam['ObjectId'];goto eFPxv;rCTCX:logs('amazon_pay_v2')->info('AmazonIPNService::売上請求処理 end');goto r2Q5J;vjVoU:logs('amazon_pay_v2')->info('AmazonIPNService::売上請求処理 start');goto rCTCX;U5Yxf:if ($arrParam['ObjectType'] == 'REFUND') {goto TLxSi;}goto cYMUz;PVEB1:SCyJs:goto M6wXU;cYMUz:goto xydkX;goto rAYkI;qcvYg:PvXd_:goto PVEB1;rAYkI:qXwaJ:goto vKMpv;Hxhwd:$this->firstOrderProcess($Order);goto JWQxQ;VuPUG:logs('amazon_pay_v2')->info('AmazonIPNService::売上キャンセル処理 start');goto bei1Z;r1tRL:$Order = $this->getOrder($arrParam, $chargeResponse);goto YZNP5;aLTCc:if (!($chargeResponseState == 'Captured' && !in_array($objectId, $arrChargeId))) {goto tAyMl;}goto vjVoU;zxwS2:$arrChargeId = [];goto Iosz8;WnpXA:if (!($this->Config->getSellerId() != $arrParam['MerchantID'])) {goto p3s9N;}goto fJseG;k5Lls:p3s9N:goto zetAU;fJseG:return null;goto k5Lls;bei1Z:logs('amazon_pay_v2')->info('AmazonIPNService::売上キャンセル処理 end');goto qcvYg;msZ55:logs('amazon_pay_v2')->info('AmazonIPNService::初回注文処理 start');goto Hxhwd;HiM_7:xydkX:goto UDho8;hL9SR:TLxSi:goto X2G48;s07Vf:logs('amazon_pay_v2')->info('AmazonIPNService::返金処理 end');goto HiM_7;utr3a:$Order = $this->getFirstOrder($arrParam, $chargeResponse);goto Xvq8B;YZNP5:if (!$Order) {goto SCyJs;}goto q_3_h;DIwyl:NNjvH:goto r1tRL;Iosz8:foreach ($AmazonTradings as $AmazonTrading) {$arrChargeId[] = $AmazonTrading->getChargeId();tEk3T:}goto S0Vs7;UDho8:}public function getOrder($arrParam, $response){$Order = $this->orderRepository->findOneBy(['amazonpay_v2_charge_permission_id' => $arrParam['ChargePermissionId'], 'AmazonPayV2AmazonStatus' => [AmazonStatus::AUTHORI, AmazonStatus::CAPTURE], 'OrderStatus' => [OrderStatus::NEW, OrderStatus::PAID]]);return $Order;}public function getFirstOrder($arrParam, $response){goto ByNFH;G5XS3:$order_id = $response->merchantMetadata->merchantReferenceId;goto nNemS;ByNFH:$Order = $this->orderRepository->findOneBy(['amazonpay_v2_charge_permission_id' => $arrParam['ChargePermissionId'], 'payment_total' => (int) $response->chargeAmount->amount, 'OrderStatus' => OrderStatus::PENDING]);goto dcGY9;nNemS:if (!$prefix) {goto IW9hy;}goto lbw20;GOZR9:$iniFile = dirname(__FILE__) . '/../amazon_pay_config.ini';goto GRC5S;iEo5k:$Order = $this->orderRepository->findOneBy(['id' => $order_id, 'payment_total' => (int) $response->chargeAmount->amount, 'OrderStatus' => OrderStatus::PENDING]);goto MH6A1;lbw20:$order_id = str_replace($prefix, '', $order_id);goto WbU9T;WbU9T:IW9hy:goto iEo5k;ULTmK:$prefix = $arrInit['prefix'];goto NtTDs;Vug0_:return $Order;goto ZoOem;GRC5S:if (!file_exists($iniFile)) {goto onFn3;}goto z9WcG;mEvWC:$prefix = '';goto GOZR9;z9WcG:$arrInit = parse_ini_file($iniFile);goto ULTmK;NtTDs:onFn3:goto o1nWm;dcGY9:if ($Order) {goto wL6h4;}goto mEvWC;o1nWm:$prefix = $prefix === '' ? '' : $prefix . '_';goto G5XS3;MH6A1:wL6h4:goto Vug0_;ZoOem:}function firstOrderProcess($Order){goto F7huU;HcKgU:$password = $this->amazonOrderHelper->registCustomer($Order, $arrAmazonCustomerParam['mail_magazine'], $profile);goto Gd7mg;mW0vW:wQXha:goto x9fT7;K3K0d:        $mail_message = <<<__EOS__
************************************************
　会員登録情報
************************************************
マイページURL：{$url}
※会員登録済みです。メールアドレスは{$mail}です。

__EOS__;
goto iawPD;DO3pF:$Order->setOrderStatus($OrderStatus);goto dD6b3;la4Hn:goto C96mn;goto UM7Ly;FTAbl:$Order->setCompleteMailMessage($mail_message);goto fIUtk;it5Fl:$arrAmazonCustomerParam = $session_temp[$this->sessionAmazonCustomerParamKey];goto zctMi;v4FY4:$Customers = $this->customerRepository->getNonWithdrawingCustomers(['v2_amazon_user_id' => $profile->buyerId]);goto xYwZi;dD6b3:$this->purchaseFlow->commit($Order, new PurchaseContext());goto jjVsV;M1NJu:$Order->setCustomer($Customer);goto EhwoA;xYwZi:if (!(!$Customer->getV2AmazonUserId() && empty($Customers[0]))) {goto Nni5G;}goto lQOlz;Rkqwm:z66_3:goto eQJMT;KCkKO:$this->entityManager->flush();goto CEJQR;UM7Ly:xOkBj:goto xU6_Y;c2Y5C:sD2OI:goto la4Hn;Gd7mg:$Customer = $this->customerRepository->findOneBy(['email' => $Order->getEmail()]);goto M1NJu;Ukt04:C96mn:goto Is0n0;xU6_Y:if (!$arrAmazonCustomerParam['customer_regist_v2']) {goto J4uEX;}goto dv2li;fhHmo:if (is_null($this->Config->getMailNotices())) {goto KLa1D;}goto n0OyF;P2cVR:$this->amazonOrderHelper->setAmazonOrder($Order, $response->chargePermissionId, $response->chargeId);goto uk5ff;Is0n0:goto U06bO;goto mW0vW;MVMFf:        $mail_message = <<<__EOS__
************************************************
　会員登録情報
************************************************
マイページURL：{$url}
ログインメールアドレス：{$mail}
初期パスワード：{$password}

__EOS__;
goto SiOOL;ZZbb0:o_Ay6:goto bUarg;V0ZPo:if (empty($arrAmazonCustomerParam['login_check_v2']) || $arrAmazonCustomerParam['login_check_v2'] == 'regist') {goto xOkBj;}goto OFJOI;FYcuq:$LockedOrder = $this->orderRepository->find($Order['id'], LockMode::PESSIMISTIC_WRITE);goto NpeIy;xWVQ3:return;goto ZZbb0;NpeIy:logs('amazon_pay_v2')->info('$Order[update_date] is ' . $Order['update_date']->format('Y-m-d H:i:s.u') . ', $LockedOrder[update_date] is ' . $LockedOrder['update_date']->format('Y-m-d H:i:s.u'));goto yYccO;n0OyF:$Order->appendCompleteMailMessage("特記事項：" . $this->Config->getMailNotices());goto QWkJ_;MJi0l:$this->entityManager->flush();goto Prw5P;fAJX0:logs('amazon_pay_v2')->info('[注文処理] 注文メールの送信を行います.', [$Order->getId()]);goto fhHmo;duvTL:$amazonCheckoutSessionId = $session_temp[$this->sessionAmazonCheckoutSessionIdKey];goto z_k1k;b8ufO:$Customers = $this->customerRepository->getNonWithdrawingCustomers(['v2_amazon_user_id' => $profile->buyerId]);goto d4Tai;Z3jQg:$Customer = $this->customerRepository->findOneBy(['email' => $arrAmazonCustomerParam['amazon_login_email_v2']]);goto ljrQC;yYccO:if (!($order['update_date'] != $LockedOrder['update_date'])) {goto o_Ay6;}goto ovFrA;x9fT7:$Customer = $Order->getCustomer();goto b8ufO;uk5ff:$OrderStatus = $this->orderStatusRepository->find(OrderStatus::NEW);goto DO3pF;iawPD:X2qr5:goto FTAbl;Prw5P:$this->entityManager->commit();goto BHbmq;EhwoA:$mail = $Customer->getEmail();goto MVMFf;CZDGA:$this->amazonOrderHelper->copyToOrderFromCustomer($Order, $Customer);goto v4FY4;lQOlz:$Customer->setV2AmazonUserId($profile->buyerId);goto EKugr;H7N5J:$this->mailService->sendOrderMail($Order);goto KCkKO;zctMi:$profile = $session_temp[$this->sessionAmazonProfileKey];goto duvTL;z_k1k:$response = $this->amazonOrderHelper->completeCheckout($Order, $amazonCheckoutSessionId);goto P2cVR;SiOOL:goto X2qr5;goto Rkqwm;jjVsV:if ($session_temp['IS_AUTHENTICATED_FULLY']) {goto wQXha;}goto V0ZPo;fIUtk:J4uEX:goto Ukt04;qD3xu:$Order->setAmazonPayV2SessionTemp(null);goto MJi0l;uG9d6:$this->entityManager->rollback();goto xWVQ3;tMV0p:$Customer->setV2AmazonUserId($profile->buyerId);goto jY7Xn;d4Tai:if (!(!$Customer->getV2AmazonUserId() && empty($Customers[0]))) {goto jweny;}goto tMV0p;ljrQC:$Order->setCustomer($Customer);goto CZDGA;CEJQR:logs('amazon_pay_v2')->info('購入処理完了', [$Order->getId()]);goto FUndv;BHbmq:logs('amazon_pay_v2')->info('[注文処理] 注文処理が完了しました.', [$Order->getId()]);goto fAJX0;ovFrA:logs('amazon_pay_v2')->info('[注文処理] 受注情報に更新がありました。処理を中断します。');goto uG9d6;Zk5yr:U06bO:goto qD3xu;dv2li:$url = $this->container->get('router')->generate('mypage_login', [], UrlGeneratorInterface::ABSOLUTE_URL);goto Is8SO;jY7Xn:jweny:goto Zk5yr;OFJOI:if (!($arrAmazonCustomerParam['login_check_v2'] == 'login')) {goto sD2OI;}goto Z3jQg;bUarg:$session_temp = unserialize($Order->getAmazonPayV2SessionTemp());goto it5Fl;eQJMT:$mail = $Order->getEmail();goto K3K0d;F7huU:$this->entityManager->beginTransaction();goto FYcuq;EKugr:Nni5G:goto c2Y5C;Is8SO:if ($this->customerRepository->getNonWithdrawingCustomers(['email' => $Order->getEmail()]) || $this->customerRepository->getNonWithdrawingCustomers(['v2_amazon_user_id' => $profile->buyerId])) {goto z66_3;}goto HcKgU;QWkJ_:KLa1D:goto H7N5J;FUndv:}}