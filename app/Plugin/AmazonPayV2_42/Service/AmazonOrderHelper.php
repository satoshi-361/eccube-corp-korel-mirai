<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2022-12-15 15:50:07              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2_42\Service;use Doctrine\ORM\EntityManagerInterface;use Plugin\AmazonPayV2_42\Entity\Master\AmazonStatus;use Plugin\AmazonPayV2_42\Entity\AmazonTrading;use Plugin\AmazonPayV2_42\Exception\AmazonException;use Plugin\AmazonPayV2_42\Exception\AmazonPaymentException;use Plugin\AmazonPayV2_42\Exception\AmazonSystemException;use Plugin\AmazonPayV2_42\Repository\Master\AmazonStatusRepository;use Plugin\AmazonPayV2_42\Repository\ConfigRepository;use Plugin\AmazonPayV2_42\Service\Method\AmazonPay;use Plugin\AmazonPayV2_42\Service\AmazonRequestService;use Eccube\Common\Constant;use Eccube\Common\EccubeConfig;use Eccube\Entity\Customer;use Eccube\Entity\Order;use Eccube\Entity\Shipping;use Eccube\Entity\Master\CustomerStatus;use Eccube\Entity\Master\OrderStatus;use Eccube\Repository\CustomerRepository;use Eccube\Repository\BaseInfoRepository;use Eccube\Repository\PaymentRepository;use Eccube\Repository\PluginRepository;use Eccube\Repository\Master\CustomerStatusRepository;use Eccube\Repository\Master\OrderStatusRepository;use Eccube\Repository\Master\PrefRepository;use Eccube\Service\PurchaseFlow\PurchaseContext;use Eccube\Service\PurchaseFlow\Processor\StockReduceProcessor;use Eccube\Service\PurchaseFlow\Processor\PointProcessor;use Symfony\Component\HttpFoundation\Session\SessionInterface;use Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface;use Symfony\Component\Security\Core\Authentication\Token\UsernamePasswordToken;use Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface;use Symfony\Component\DependencyInjection\ContainerInterface;class AmazonOrderHelper{private $sessionAmazonProfileKey = 'amazon_pay_v2.profile';private $sessionAmazonShippingAddressKey = 'amazon_pay_v2.shipping_address';private $amazonSettings;private $pointProcessor;private $stockReduceProcessor;public function __construct(CustomerRepository $customerRepository, BaseInfoRepository $baseInfoRepository, PaymentRepository $paymentRepository, PluginRepository $pluginRepository, CustomerStatusRepository $customerStatusRepository, OrderStatusRepository $orderStatusRepository, EntityManagerInterface $entityManager, EccubeConfig $eccubeConfig, PrefRepository $prefRepository, SessionInterface $session, EncoderFactoryInterface $encoderFactory, TokenStorageInterface $tokenStorage, AmazonStatusRepository $amazonStatusRepository, ConfigRepository $configRepository, AmazonRequestService $amazonRequestService, StockReduceProcessor $stockReduceProcessor, PointProcessor $pointProcessor, ContainerInterface $container){goto lwY1d;qbQvS:$this->amazonStatusRepository = $amazonStatusRepository;goto hWskz;Mu6LK:$this->session = $session;goto CbvWd;nclO0:$this->container = $container;goto gh7co;eOHqN:$this->customerStatusRepository = $customerStatusRepository;goto R8_fk;R8_fk:$this->orderStatusRepository = $orderStatusRepository;goto Elp4Q;Cos3i:$this->tokenStorage = $tokenStorage;goto qbQvS;CbvWd:$this->encoderFactory = $encoderFactory;goto Cos3i;lwY1d:$this->customerRepository = $customerRepository;goto lwxEp;N8C0Q:$this->pluginRepository = $pluginRepository;goto eOHqN;JSMIR:$this->stockReduceProcessor = $stockReduceProcessor;goto OieVi;hWskz:$this->configRepository = $configRepository;goto neZ3c;danid:$this->eccubeConfig = $eccubeConfig;goto AdiCH;lwxEp:$this->BaseInfo = $baseInfoRepository->get();goto aTxWG;V69cQ:$this->Config = $this->configRepository->get();goto JSMIR;neZ3c:$this->amazonRequestService = $amazonRequestService;goto V69cQ;Elp4Q:$this->entityManager = $entityManager;goto danid;OieVi:$this->pointProcessor = $pointProcessor;goto nclO0;AdiCH:$this->prefRepository = $prefRepository;goto Mu6LK;aTxWG:$this->paymentRepository = $paymentRepository;goto N8C0Q;gh7co:}public function getOrderer($shippingAddress){goto pmgAF;si_2d:return $Customer;goto V735y;zRahR:$this->convert($Customer, $shippingAddress);goto si_2d;xZSOW:$Customer->setName02('　');goto DmPwD;zfjNT:$Customer->setKana02('　');goto ZMUNT;n1MVc:$Customer->setPref($Pref);goto l28IE;pmgAF:$Customer = new Customer();goto FmRbz;FmRbz:$Customer->setName01('　');goto xZSOW;DmPwD:$Customer->setKana01('　');goto zfjNT;l28IE:$profile = unserialize($this->session->get($this->sessionAmazonProfileKey));goto KPeXI;ZMUNT:$Pref = $this->prefRepository->find(13);goto n1MVc;KPeXI:$Customer->setEmail($profile->email);goto zRahR;V735y:}public function initializeAmazonOrder($Order, $Customer){goto W4uzK;mpMdj:$this->entityManager->persist($Order);goto xHpql;hnnD3:$Order->setEmail($Customer->getEmail());goto mpMdj;W4uzK:$Payment = $this->paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto XCH_8;XCH_8:$Order->setPayment($Payment);goto hnnD3;xHpql:return $Order;goto PoicD;PoicD:}public function convert($entity, $shippingAddress){goto uW2fb;Am82d:if ($entity instanceof Shipping) {goto ApIUH;}goto PxH2d;W8Z71:$entity->setPref($Pref);goto BrpGq;SMJCV:goto Rd6C9;goto QqB0b;gVtvk:evior:goto xImpb;eQ6uH:PzStF:goto DJ0_w;LI65k:$entity->setKana02('　');goto qOwHm;pA6mY:$entity->setKana01('　')->setKana02('　');goto iV3Zm;K1JmR:preg_match('/(\\d{3})(\\d{4})/', $shippingAddress->postalCode, $arrPostalCode);goto X7mbU;ESozo:$convertAmznAddr1 = mb_convert_kana($shippingAddress->addressLine1, 'n', 'utf-8');goto GozPK;y_tCO:$arrPostalCode = explode('-', $shippingAddress->postalCode);goto xp2VP;xOGUs:$addr02 .= " " . $shippingAddress->addressLine3;goto aXgqb;HD1VZ:edRdy:goto IT1AO;X02M4:if (!($this->Config->getOrderCorrect() == $this->eccubeConfig['amazon_pay_v2']['toggle']['on'])) {goto nRlHX;}goto kodhR;C_jIs:$entity->setName01($arrName['name01'])->setName02($arrName['name02']);goto PBAhe;fuLvf:if (!(mb_strlen($PostalCodeCount) >= 9)) {goto zT7QT;}goto bEGh4;H2mLL:$addr01 = $shippingAddress->city . $convertAmznAddr1;goto Fc3kr;Fwu_c:$Pref = $this->prefRepository->find(13);goto X40q4;j89k9:goto fV_Wy;goto NO3nM;Fc3kr:$addr02 = $convertAmznAddr2;goto xYMzO;yIE7d:yHO4o:goto f3a4P;xYMzO:goto evior;goto lmGPh;NO3nM:arfcc:goto bFTrz;lmGPh:HhaLM:goto XpIIt;UDrRN:goto PZ4k1;goto ZtHY1;udlmh:if (preg_match("/[0-9]/", $convertAmznAddr1, $matches, PREG_OFFSET_CAPTURE)) {goto HhaLM;}goto H2mLL;ouh06:TGb8a:goto W8Z71;uW2fb:if (strpos($shippingAddress->postalCode, '-') !== false) {goto vS9dl;}goto K1JmR;qOwHm:goto bQ9fh;goto ozk37;XIlxI:wegS3:goto OmrVz;DPaRh:uCaqh:goto ESozo;X40q4:$entity->setPref($Pref);goto J5u5W;H409f:$arrFixKana = $this->reviseKana($entity->getName01(), $entity->getName02(), $email);goto E1D29;mkcyL:$entity->setPostalCode(preg_replace('/(-|−)/', '', $shippingAddress->postalCode));goto atV7u;bFTrz:$entity->setKana01($arrFixKana['kana01'])->setKana02($arrFixKana['kana02']);goto cRlkL;xgbW1:$email = $Order->getEmail();goto SMJCV;YCR2m:nRlHX:goto yr3Sd;XpIIt:$offset = strlen(substr($convertAmznAddr1, 0, $matches[0][1]));goto RL5XM;X7mbU:unset($arrPostalCode[0]);goto aWI3L;kodhR:if ($entity instanceof Order) {goto yHO4o;}goto wJ5yX;DJ0_w:$entity->setKana01('　')->setKana02('　');goto F3lFM;aWI3L:$arrPostalCode = array_values($arrPostalCode);goto UDrRN;PBAhe:if (isset($arrName['kana01'])) {goto edRdy;}goto Am82d;CUoc8:$PostalCodeCount = preg_replace('/(-|−)/', '', $shippingAddress->postalCode);goto fuLvf;wpH5l:if (!empty($Pref)) {goto TGb8a;}goto xRlG0;cRlkL:goto fV_Wy;goto eQ6uH;xImpb:if (!($shippingAddress->addressLine3 != '')) {goto bzv1v;}goto xOGUs;yr3Sd:switch ($shippingAddress->stateOrRegion) {case "東京":$shippingAddress->stateOrRegion = "東京都";goto uCaqh;case "大阪":$shippingAddress->stateOrRegion = "大阪府";goto uCaqh;case "京都":$shippingAddress->stateOrRegion = "京都府";goto uCaqh;case "東京都":goto uCaqh;case "大阪府":goto uCaqh;case "京都府":goto uCaqh;case "北海道":goto uCaqh;default:goto hNBdb;A0XAb:AGU3S:goto jIEN2;hNBdb:if (preg_match('/県$/u', $shippingAddress->stateOrRegion)) {goto AGU3S;}goto qu6O2;qu6O2:$shippingAddress->stateOrRegion .= '県';goto A0XAb;jIEN2:}goto xpqqB;hQOPa:if ($entity->getKana01() == null) {goto PzStF;}goto j89k9;xRlG0:logs('amazon_pay_v2')->info('*** 都道府県マッチングエラー *** addr = ' . var_export($shippingAddress, true));goto Fwu_c;QqB0b:mnM8N:goto qURwy;wJ5yX:if ($entity instanceof Shipping) {goto wegS3;}goto ubjs8;JI4mc:zT7QT:goto mkcyL;ozk37:ApIUH:goto pA6mY;bEGh4:$arrAmznAddr = ['PostalCode' => ' ', 'CountryCode' => '', 'StateOrRegion' => '', 'Name' => '', 'AddressLine1' => '', 'AddressLine2' => '', 'AddressLine3' => '', 'City' => '', 'Phone' => ''];goto JI4mc;ubjs8:if ($entity instanceof Customer) {goto mnM8N;}goto Xn_N1;TCjJJ:$AddressLine1End = mb_substr($convertAmznAddr1, $offset);goto tK7sg;GozPK:$convertAmznAddr2 = mb_convert_kana($shippingAddress->addressLine2, 'n', 'utf-8');goto udlmh;Q5HjA:goto Rd6C9;goto XIlxI;iV3Zm:bQ9fh:goto X02M4;fP1bl:$Pref = $this->prefRepository->findOneBy(['name' => $shippingAddress->stateOrRegion]);goto wpH5l;Xn_N1:goto Rd6C9;goto yIE7d;DvxoW:Rd6C9:goto H409f;tK7sg:$addr01 = $shippingAddress->city . $AddressLine1Front;goto LsMzi;ZtHY1:vS9dl:goto y_tCO;LsMzi:$addr02 = $AddressLine1End . $convertAmznAddr2;goto gVtvk;RL5XM:$AddressLine1Front = mb_substr($convertAmznAddr1, 0, $offset);goto TCjJJ;CqKL4:goto SIaNw;goto ouh06;f3a4P:$email = $entity->getEmail();goto Q5HjA;PxH2d:goto bQ9fh;goto HD1VZ;xp2VP:PZ4k1:goto CUoc8;OmrVz:$Order = $entity->getOrder();goto xgbW1;IT1AO:$entity->setKana01($arrName['kana01']);goto LI65k;atV7u:$arrName = $this->divideName($shippingAddress->name);goto C_jIs;xpqqB:hrpp5:goto DPaRh;J5u5W:$addr01 = $shippingAddress->stateOrRegion . $addr01;goto CqKL4;F3lFM:fV_Wy:goto YCR2m;aXgqb:bzv1v:goto fP1bl;qURwy:$email = $entity->getEmail();goto DvxoW;BrpGq:SIaNw:goto KxJ9d;kFXO5:$entity->setPhoneNumber(preg_replace('/(-|−)/', '', $shippingAddress->phoneNumber));goto Fxpad;E1D29:if (!empty($arrFixKana)) {goto arfcc;}goto hQOPa;KxJ9d:$entity->setAddr01($addr01)->setAddr02($addr02);goto kFXO5;Fxpad:}public function divideName($name){goto KhFxP;bgTVY:goto FyvsS;goto qC0jR;kujhd:if (!($this->Config->getOrderCorrect() == $this->eccubeConfig['amazon_pay_v2']['toggle']['on'])) {goto fULJ1;}goto XsLDT;dc7MR:$arrResult['name02'] = $arrName[1];goto faOYb;yUk33:logs('amazon_pay_v2')->info('*** 名前補正 ***');goto riBun;a1qXM:$arrResult['name02'] = '　';goto bgTVY;AfA4c:$arrResult = $arrFixName;goto yUk33;KhFxP:$arrResult = [];goto esx1f;M0UdA:if (!empty($arrFixName)) {goto g5rhH;}goto Rxibn;Rxibn:$arrResult['name01'] = $name;goto a1qXM;sQ617:if (count($arrName) == 2) {goto oLH81;}goto qXAZG;qC0jR:g5rhH:goto AfA4c;yhxQC:goto GLw0I;goto KEzxk;esx1f:$arrName = preg_split('/[ 　]+/u', $name);goto sQ617;XsLDT:$arrFixName = $this->reviseName($name);goto aZPCo;faOYb:GLw0I:goto ufoo2;aZPCo:fULJ1:goto M0UdA;riBun:FyvsS:goto Z1NsZ;qXAZG:$arrResult = $this->reviseLastNameList($name);goto oDncK;Vv4dJ:$arrResult['name01'] = $arrName[0];goto dc7MR;Z1NsZ:VgbJj:goto yhxQC;oDncK:if (!empty($arrResult)) {goto VgbJj;}goto kujhd;ufoo2:return $arrResult;goto WCksZ;KEzxk:oLH81:goto Vv4dJ;WCksZ:}private function searchObject($search, $target, $objectName){goto TemB2;rnA5f:tWC2h:goto jc4tP;e139L:if (!($target == 'name')) {goto tWC2h;}goto bW3cE;jc4tP:return $qb->getQuery()->getResult();goto sqoEK;TemB2:$qb = $this->entityManager->createQueryBuilder();goto cUN8J;bW3cE:$qb->andWhere('CONCAT(o.name01, o.name02) = :name')->setParameter('name', $search)->andWhere("TRIM(o.name02) <> ''");goto rnA5f;cUN8J:$qb->select('o')->from('\\Eccube\\Entity' . "\\{$objectName}", 'o');goto e139L;sqoEK:}private function searchObjectByNameAndEmail($name01, $name02, $email, $target, $objectName){goto shrFz;q5D10:if (!($target == 'kana')) {goto oxq9o;}goto i_rk_;dccZ4:PlRH2:goto ZQQkr;bgJJS:return $qb->getQuery()->getResult();goto dXqhg;o9Ay5:oxq9o:goto bgJJS;CTi7x:if ($objectName == 'Customer') {goto PlRH2;}goto O3wgG;O3wgG:goto VPpyE;goto EnVUh;EnVUh:mITwR:goto P4r1u;k3LVU:goto VPpyE;goto dccZ4;uRgIr:nDigI:goto kVsna;nMy16:VPpyE:goto o9Ay5;jMopO:if ($objectName == 'Shipping') {goto nDigI;}goto CTi7x;i_rk_:if ($objectName == 'Order') {goto mITwR;}goto jMopO;JWFPe:goto VPpyE;goto uRgIr;ZQQkr:$qb->select('c')->from(Customer::class, 'c')->andWhere('c.name01 = :name01')->setParameter('name01', $name01)->andWhere('c.name02 = :name02')->setParameter('name02', $name02)->andWhere('c.email = :email')->setParameter('email', $email)->andWhere("c.kana01 <> ''")->andWhere("c.kana02 <> ''")->andWhere("c.v2_amazon_user_id <> ''")->orderBy('c.update_date', 'DESC');goto nMy16;kVsna:$qb->select('s')->from(Shipping::class, 's')->leftJoin('s.Order', 'o')->andWhere('s.name01 = :name01')->setParameter('name01', $name01)->andWhere('s.name02 = :name02')->setParameter('name02', $name02)->andWhere('o.email = :email')->setParameter('email', $email)->andWhere("s.kana01 <> ''")->andWhere("s.kana02 <> ''")->andWhere("o.OrderStatus <> :status_pending")->setParameter('status_pending', OrderStatus::PENDING)->andWhere("o.OrderStatus <> :status_processing")->setParameter('status_processing', OrderStatus::PROCESSING)->andWhere("o.AmazonPayV2AmazonStatus IS NOT NULL")->orderBy('o.update_date', 'DESC');goto k3LVU;P4r1u:$qb->select('o')->from(Order::class, 'o')->andWhere('o.name01 = :name01')->setParameter('name01', $name01)->andWhere('o.name02 = :name02')->setParameter('name02', $name02)->andWhere('o.email = :email')->setParameter('email', $email)->andWhere("o.kana01 <> ''")->andWhere("o.kana02 <> ''")->andWhere("o.OrderStatus <> :status_pending")->setParameter('status_pending', OrderStatus::PENDING)->andWhere("o.OrderStatus <> :status_processing")->setParameter('status_processing', OrderStatus::PROCESSING)->andWhere("o.AmazonPayV2AmazonStatus IS NOT NULL")->orderBy('o.update_date', 'DESC');goto JWFPe;shrFz:$qb = $this->entityManager->createQueryBuilder();goto q5D10;dXqhg:}public function reviseName($name){goto DjIbS;kcMPH:$Objects = $this->searchObject($name, 'name', 'Customer');goto TZy27;DjIbS:$arrFixName = [];goto BPST5;cgwsJ:$arrFixName['name01'] = $Objects[0]->getName01();goto ktHxp;TZy27:COjjj:goto N_HBK;Ru2KY:if (!empty($Objects)) {goto qSydc;}goto Ekbux;BPST5:$Objects = $this->searchObject($name, 'name', 'Order');goto Ru2KY;ktHxp:$arrFixName['name02'] = $Objects[0]->getName02();goto llBV8;RozGu:return $arrFixName;goto jaXcZ;Ekbux:$Objects = $this->searchObject($name, 'name', 'Shipping');goto UoIxF;llBV8:Ejxj8:goto RozGu;UoIxF:if (!empty($Objects)) {goto COjjj;}goto kcMPH;N_HBK:qSydc:goto b1oFs;b1oFs:if (empty($Objects)) {goto Ejxj8;}goto cgwsJ;jaXcZ:}public function reviseKana($name01, $name02, $email){goto orhJM;ZPGd5:$Objects = $this->searchObjectByNameAndEmail($name01, $name02, $email, 'kana', 'Order');goto jwhJi;bjJcU:if (!empty($Objects)) {goto v6zI9;}goto AKaoC;iY9SR:Derse:goto YKywU;COyVW:return $arrFixKana;goto Mzv8w;I0C0l:v6zI9:goto iY9SR;JOX_6:$arrFixKana['kana01'] = $Objects[0]->getKana01();goto bVZHD;YKywU:if (empty($Objects)) {goto B0X0c;}goto JOX_6;jwhJi:if (!empty($Objects)) {goto Derse;}goto dGpt1;eOSSK:B0X0c:goto COyVW;orhJM:$arrFixKana = [];goto ZPGd5;AKaoC:$Objects = $this->searchObjectByNameAndEmail($name01, $name02, $email, 'kana', 'Customer');goto I0C0l;dGpt1:$Objects = $this->searchObjectByNameAndEmail($name01, $name02, $email, 'kana', 'Shipping');goto bjJcU;bVZHD:$arrFixKana['kana02'] = $Objects[0]->getKana02();goto eOSSK;Mzv8w:}public function reviseLastNameList($name){goto gP2uK;pTH1P:return null;goto dsox_;gP2uK:$arrName = [];goto jXvV3;PJ_8n:if (!($last_max_len > $cr_len)) {goto JvoFw;}goto Yiu7_;DMZNM:$last_max_len = $cr_len;goto D0vwf;fkZKp:RiSOa:goto SMY0z;BdGMc:SizHZ:goto SBEhT;FiRP1:$arrName['kana02'] = '　';goto fkZKp;SBEhT:fclose($fp);goto mAPYv;mAPYv:return $arrName;goto THF6_;jXvV3:$fp = fopen($this->eccubeConfig['plugin_data_realdir'] . '/AmazonPayV2_42/lastNameList.csv', 'r');goto pCmyH;FeTWN:$arrName = null;goto kEUxi;xbZzI:$arrName['kana01'] = $row[1];goto FiRP1;SMY0z:goto xWf8p;goto BdGMc;FOeO2:$arrName['name02'] = mb_substr($name, $cr_len, null, 'utf-8');goto xbZzI;KH8iv:JvoFw:goto DMZNM;Yiu7_:goto xWf8p;goto KH8iv;sJFvf:$cr_len = mb_strlen($row[0], 'utf-8');goto PJ_8n;Oymaj:if (!(($row = fgetcsv($fp)) !== FALSE)) {goto SizHZ;}goto XDNLT;qwWUo:xWf8p:goto Oymaj;D0vwf:$arrName['name01'] = $row[0];goto FOeO2;dsox_:Qwbdv:goto FeTWN;q3huj:$row = fgetcsv($fp);goto qwWUo;pCmyH:if (!($fp === false)) {goto Qwbdv;}goto pTH1P;kEUxi:$last_max_len = 0;goto q3huj;XDNLT:if (!(mb_strpos($name, $row[0], null, 'utf-8') === 0)) {goto RiSOa;}goto sJFvf;THF6_:}public function copyToOrderFromCustomer(Order $Order, Customer $Customer){goto w_YDF;E7M6q:$Order->setCustomer($Customer);goto QV_Qz;ETGeZ:$Order->setName01($Customer->getName01())->setName02($Customer->getName02())->setKana01($Customer->getKana01())->setKana02($Customer->getKana02())->setCompanyName($Customer->getCompanyName())->setEmail($Customer->getEmail())->setPhoneNumber($Customer->getPhoneNumber())->setPostalCode($Customer->getPostalCode())->setPref($Customer->getPref())->setAddr01($Customer->getAddr01())->setAddr02($Customer->getAddr02())->setSex($Customer->getSex())->setBirth($Customer->getBirth())->setJob($Customer->getJob());goto jPdLJ;onpCH:JVj2r:goto cOQC8;QV_Qz:J1TGk:goto ETGeZ;cOQC8:if (!$Customer->getId()) {goto J1TGk;}goto E7M6q;w_YDF:if (!empty($Customer)) {goto JVj2r;}goto giwrQ;giwrQ:return;goto onpCH;jPdLJ:}public function completeCheckout(Order $Order, $amazonCheckoutSessionId){goto WIny3;km_Tt:throw AmazonPaymentException::create(AmazonPaymentException::ZERO_PAYMENT);goto LOKng;kZOkW:$response = $this->amazonRequestService->completeCheckoutSession($Order, $amazonCheckoutSessionId);goto XzJIp;XzJIp:return $response;goto A22Bp;LOKng:kEsq0:goto kZOkW;WIny3:if (!($Order->getPaymentTotal() == 0)) {goto kEsq0;}goto km_Tt;A22Bp:}public function setAmazonOrder(Order $Order, $chargePermissionId, $chargeId = null){goto c2vLw;c2vLw:$Order->setAmazonPayV2ChargePermissionId($chargePermissionId);goto mPBy0;fAQ9Y:$payment_total = (int) $Order->getPaymentTotal();goto FWCWQ;lqt_P:$AmazonTrading->setChargePermissionId($chargePermissionId);goto Bjeb5;g9vMV:Mw8km:goto RxB5l;Nbs2I:$AmazonTrading->setOrder($Order);goto lqt_P;ygfKz:$AmazonTrading->setRefundCount(0);goto N__q7;q_CFB:if ($this->Config->getSale() == $this->eccubeConfig['amazon_pay_v2']['sale']['capture']) {goto ITXLg;}goto X5XNE;XkmG1:goto xxdI6;goto c74Eo;F_WxJ:$AmazonTrading->setAuthoriAmount($payment_total);goto XTzF_;RxB5l:$AmazonTrading = new AmazonTrading();goto Nbs2I;X5XNE:$Order->setAmazonPayV2BillableAmount($billableAmount);goto eXftu;N__q7:$Order->addAmazonPayV2AmazonTrading($AmazonTrading);goto HtdIC;FOLir:Yyj0a:goto iqwA0;gecgP:$Order->setAmazonPayV2BillableAmount($billableAmount - $payment_total);goto s1R5t;k1Nno:$billableAmount = $payment_total + $this->eccubeConfig['amazon_pay_v2']['max_billable_amount'];goto z8Tai;FWCWQ:if ($payment_total * 9 > $this->eccubeConfig['amazon_pay_v2']['max_billable_amount']) {goto Yyj0a;}goto k1Nno;Bjeb5:$AmazonTrading->setChargeId($chargeId);goto F_WxJ;XKI1g:ITXLg:goto gecgP;XTzF_:if ($this->Config->getSale() == $this->eccubeConfig['amazon_pay_v2']['sale']['capture']) {goto jjGri;}goto qUe34;c74Eo:jjGri:goto ZUdhX;mPBy0:$AmazonStatus = $this->amazonStatusRepository->find($this->Config->getSale());goto X3k6a;X3k6a:$Order->setAmazonPayV2AmazonStatus($AmazonStatus);goto fAQ9Y;z8Tai:goto QEn2L;goto FOLir;qUe34:$AmazonTrading->setCaptureAmount(0);goto XkmG1;UAFo1:xxdI6:goto ygfKz;ZUdhX:$AmazonTrading->setCaptureAmount($payment_total);goto UAFo1;s1R5t:$Order->setPaymentDate(new \DateTime());goto g9vMV;iqwA0:$billableAmount = floor($payment_total * 9);goto MFLx3;MFLx3:QEn2L:goto q_CFB;eXftu:goto Mw8km;goto XKI1g;HtdIC:}public function registCustomer(Order $Order, $mail_magazine, $profile = null){goto Bh9n3;yQPvH:if ($mail_magazine) {goto nW8u4;}goto y4TKQ;ormpo:ecA05:goto R1iUO;bodI9:$enc_password = $encoder->encodePassword($password, $salt);goto nVyGJ;Y0DCA:$Customer->setName01($Order->getName01())->setName02($Order->getName02())->setPostalCode($Order->getPostalCode())->setEmail($Order->getEmail())->setPref($Order->getPref())->setAddr01($Order->getAddr01())->setAddr02($Order->getAddr02())->setPhoneNumber($Order->getPhoneNumber())->setV2AmazonUserId($profile->buyerId);goto E_V8v;EfHHi:dWeQ5:goto k5IcA;hkynh:$encoder = $this->encoderFactory->getEncoder($Customer);goto JwW0m;y4TKQ:$Customer->setMailmagaFlg(false);goto nB0df;wgxoh:nW8u4:goto xxup_;nVyGJ:$secretKey = $this->customerRepository->getUniqueSecretKey();goto GBTLl;DhkGl:$token = new UsernamePasswordToken($Customer, null, 'customer', ['ROLE_USER']);goto cXodq;R1iUO:if (!$this->pluginRepository->findOneBy(['code' => 'PostCarrier42', 'enabled' => true])) {goto NKUDb;}goto AE3Vi;GBhJU:$password = $this->createPassword();goto bodI9;nB0df:goto v4VnA;goto wgxoh;GBTLl:$Customer->setSalt($salt)->setPassword($enc_password)->setSecretKey($secretKey)->setPoint(0);goto V9IGs;X8rl9:return $password;goto xhXzR;Bh9n3:logs('amazon_pay_v2')->info('*** 会員登録処理 start ***');goto YSSks;xxup_:$Customer->setMailmagaFlg(true);goto C3yRE;nskKR:$Customer->setPostcarrierFlg(true);goto EfHHi;cXodq:$this->tokenStorage->setToken($token);goto efVWz;C3yRE:v4VnA:goto ormpo;Q3BvL:$this->entityManager->persist($Customer);goto mSIX9;k5IcA:NKUDb:goto Q3BvL;E_V8v:if (!$this->pluginRepository->findOneBy(['code' => 'MailMagazine42', 'enabled' => true])) {goto ecA05;}goto yQPvH;EBWpv:$profile = unserialize($this->session->get($this->sessionAmazonProfileKey));goto fLqvO;UgZ9C:goto dWeQ5;goto PBPz5;YKYEF:$Customer->setStatus($CustomerStatus);goto Y0DCA;YSSks:if ($profile) {goto w0TKo;}goto EBWpv;yEIis:$Customer = $this->customerRepository->newCustomer();goto hkynh;JwW0m:$salt = $encoder->createSalt();goto GBhJU;efVWz:logs('amazon_pay_v2')->info('*** 会員登録処理 end ***');goto X8rl9;fLqvO:w0TKo:goto yEIis;PBPz5:IcKvp:goto nskKR;mSIX9:$this->entityManager->flush();goto DhkGl;AE3Vi:if ($mail_magazine) {goto IcKvp;}goto GgkZ8;GgkZ8:$Customer->setPostcarrierFlg(false);goto UgZ9C;V9IGs:$CustomerStatus = $this->customerStatusRepository->find(CustomerStatus::REGULAR);goto YKYEF;xhXzR:}public function adminRequest($request, $Order){goto db3KH;CBgYX:y1o9m:goto EJ0LS;sKrRf:EEAZ6:goto MJxW8;bq2fV:ElYZv:goto NEQ4q;RRqpi:foreach ($AmazonTradings as $AmazonTrading) {goto AVhLB;AVhLB:$sumAuthoriAmount += $AmazonTrading->getAuthoriAmount();goto G91qt;G91qt:$sumCaptureAmount += $AmazonTrading->getCaptureAmount();goto ITuTJ;ITuTJ:SFdQF:goto wtVky;wtVky:}goto sKrRf;XlQgP:$AmazonStatus = $amazonStatusRepositoryV1->find(AmazonStatus::CANCEL);goto poFJR;DclLv:if ($version == 'CV1') {goto C9G7q;}goto KqTA_;DHjj2:if ($Order->getPaymentMethod() === 'Amazon Pay') {goto lvzzd;}goto QkTYz;V2ZkC:goto V1gh1;goto y7MEH;GQlCQ:uDY3I:goto VuSYg;C7qKm:HEGC3:goto w_NAW;yTqou:C9G7q:goto ud7e0;UUPUP:$resultAmazonTradingInfo = [];goto aVlDc;wh4qB:goto qdRqo;goto LKeiA;R8bM1:if ($V1Enable_flg) {goto F6apr;}goto uYfIg;x2f7N:juJkK:goto V2ZkC;AzH71:IwvvJ:goto tEKrW;b1dCZ:if (!($version == 'CV1')) {goto hcnm1;}goto r5qRu;HW3nG:hcnm1:goto uPoSv;uPoSv:if ($cancel_flg || $allRefund_flg) {goto HEGC3;}goto w1VfH;n4g3E:XhWBf:goto JIkAs;z1SfS:goto hgui3;goto n4g3E;gsVKn:if ($Order->getOrderStatus()->getId() == OrderStatus::DELIVERED) {goto mZOo2;}goto N3stK;cZRit:Xkw6o:goto V8a1q;HGaCm:if ($request == 'cancel' && $payment_total == $sumCaptureAmount) {goto XhWBf;}goto aXxQx;Cxzcm:$AmazonStatus = $this->amazonStatusRepository->find(AmazonStatus::CAPTURE);goto TGRl1;MkjME:$Customer = $Order->getCustomer();goto tRpXA;MEq0H:if ($version == 'CV2') {goto Zk27n;}goto GKJCI;wMbli:O83_5:goto xSsKU;fBCp2:hgui3:goto p5Jng;TGRl1:dmKpX:goto XKT1J;iA6Xd:$amazonErr = "下記のエラーが発生しました。\n" . "リクエストを受け付けないため処理を終了しました。\n";goto JG9ts;IHflF:qdRqo:goto lA1_J;HKAws:$this->stockReduceProcessor->rollback($Order, new PurchaseContext());goto MbYd8;ejvBW:F6apr:goto wNQhQ;hk2MZ:lvzzd:goto QfNSL;JIkAs:$allRefund_flg = true;goto fBCp2;OSqaX:goto O83_5;goto hk2MZ;db3KH:$amazonErr = '';goto xBa4m;Bl9Rq:goto dmKpX;goto gBqou;zypFs:goto d1yR_;goto GQlCQ;F_4Yh:return $amazonErr;goto v6YYp;s04nu:goto d1yR_;goto CBgYX;p5Jng:$cancel_flg = false;goto z3u_2;Z_e04:$Order->setOrderStatus($OrderStatus);goto IjGHV;ADEJ2:goto dmKpX;goto yTqou;tzJw9:$Order->setAmazonPayV2BillableAmount($billableAmount);goto Cxzcm;dT2DK:return $amazonErr;goto ejvBW;aXxQx:$allRefund_flg = false;goto z1SfS;N3stK:if (!($Order->getOrderStatus()->getId() != $OrderStatus->getId())) {goto juJkK;}goto HKAws;aVlDc:foreach ($AmazonTradings as $key => $AmazonTrading) {goto ltw0R;TsonZ:$amazonChargePermissionId = $Order->getReferenceCode();goto H34s0;J_CHX:gxdWg:goto YahX9;nQNPx:mjbmf:goto Vra6o;YIlcL:if (!($version == 'CV1')) {goto XiTEu;}goto mRvDv;D35IZ:$r = $this->amazonRequestService->createRefund($amazonChargeId, $refundAmount);goto a3Bra;S3Azt:$newAmazonTrading->setChargePermissionId($r->chargePermissionId);goto EM2cb;tiIc5:$totalRefundAmount = $totalRefundAmount - $refundAmount;goto sFfkm;b4Uq4:if ($version == 'CV2') {goto eAT1V;}goto ezQ_L;ltw0R:if ($version == 'CV1') {goto I3_mw;}goto b4Uq4;zX5wK:PzsjB:goto OeP0R;IToSK:vgE_i:goto TYUJz;LYk3d:$r = $this->amazonRequestService->captureCharge($newAmazonChargeId, $Order, $addAmount);goto LR__x;IEhPn:if ($totalRefundAmount == 0) {goto iy_9k;}goto b_xbo;dcNVR:YOmU4:goto fTiuy;fYIsn:IwVZt:goto b7S9w;nn6l5:$totalBillingAmount = $totalBillingAmount - $addAmount;goto bNaMv;QM5w7:if (!isset($r->reasonCode)) {goto Qzj9U;}goto mSzmT;Jl3hL:logs('amazon_pay_v2')->error('aws request error from admin_order r=' . var_export($r, true));goto qzMQB;myAn2:eM21s:goto D8Rp1;BrXYY:goto ZkmbV;goto g9FHd;mo0Do:$billingAmount = $authoriAmount > $totalBillingAmount ? $totalBillingAmount : $authoriAmount;goto eG5Z2;RuG3O:if ($amazon_status == 'オーソリ') {goto y6UCA;}goto EqD_z;W1hat:if ($sumCaptureAmount == 0) {goto RKeNB;}goto IEhPn;mg2Xp:PYIYw:goto nn6l5;WkrAd:aBtmO:goto etrIx;t14Ie:goto eoUEL;goto fYIsn;eG5Z2:$r = $this->amazonRequestService->captureCharge($amazonChargeId, $Order, $billingAmount);goto fZrtt;rcocd:$newAmazonTrading->setRefundCount(0);goto bi5hu;Wl0Sn:if ($request == 'capture') {goto dhQZk;}goto W1hat;Qxq37:I3_mw:goto C4jTe;IkdPt:$r = $this->amazonRequestService->closeChargePermission($amazonChargePermissionId);goto JDpqe;LR__x:if (!isset($r->reasonCode)) {goto PYIYw;}goto Jl3hL;zvaM7:goto ZkmbV;goto dcNVR;JDpqe:$cancel_flg = true;goto IToSK;kjgtC:$r = false;goto zX5wK;NPr3b:$refundCount = $refundCount + 1;goto dOwxd;irPrq:iy_9k:goto QL_vR;ZpWzj:goto eoUEL;goto HEpfN;woLxx:goto eoUEL;goto PCOBZ;gtAK3:y6UCA:goto tlTjc;C4jTe:$amazonChargeId = substr_replace($AmazonTrading->getTradingCode(), "C", 20, 1);goto TsonZ;lWS8H:$newAmazonTrading->setCaptureamount($addAmount);goto rcocd;ju8a3:if ($version == 'CV2') {goto YOmU4;}goto BrXYY;mSzmT:logs('amazon_pay_v2')->error('aws request error from admin_order r = ' . var_export($r, true));goto ZpWzj;YBNMT:logs('amazon_pay_v2')->error('aws request error from admin_order r=' . var_export($r, true));goto woLxx;ySSAr:$amazonChargePermissionId = $AmazonTrading->getChargePermissionId();goto nEhW1;ezQ_L:goto kw3PX;goto Qxq37;t3A6I:$newAmazonChargeId = $r->chargeId;goto LYk3d;QvOaV:$this->entityManager->flush($AmazonTrading);goto tiIc5;Ml7Yn:$AmazonTrading->setCaptureAmount($billingAmount);goto LI2O8;I9ps0:eAT1V:goto ySSAr;vQSAD:$newAmazonTrading->setOrder($Order);goto S3Azt;H34s0:goto kw3PX;goto I9ps0;rcn1L:$newAmazonTrading->setTradingCode($newAmazonChargeId);goto JbEom;LI2O8:$this->entityManager->flush($AmazonTrading);goto YIlcL;p_T98:goto mjbmf;goto gtAK3;kJEGj:$newAmazonTrading->setOrder($Order);goto rcn1L;aRd8_:$refundCount = $AmazonTrading->getRefundCount();goto Wl0Sn;b7S9w:if (!isset($r->chargeId)) {goto IUCet;}goto t3A6I;qzMQB:goto eoUEL;goto mg2Xp;E_HLl:$newAmazonTrading->setCaptureamount($addAmount);goto GTLgK;PCOBZ:JN1Hu:goto Ml7Yn;EqD_z:$addAmount = $totalBillingAmount;goto p_T98;bi5hu:$Order->addAmazonPayV2AmazonTrading($newAmazonTrading);goto xyJii;bNaMv:if ($version == 'CV1') {goto TeeUi;}goto ju8a3;etrIx:goto vgE_i;goto Ln20F;q6cMv:if ($captureAmount > 0 || $totalBillingAmount == 0) {goto n9rqB;}goto mo0Do;QL_vR:goto eM21s;goto WkrAd;Ln20F:RKeNB:goto IkdPt;z2dB9:$authoriAmount = $AmazonTrading->getAuthoriAmount();goto K2_Xh;UKirQ:$billableAmount = $billableAmount - $billingAmount;goto O1e6C;xyJii:ZkmbV:goto isn9Q;g9FHd:TeeUi:goto ygcqV;mRvDv:$totalBillingAmount = $totalBillingAmount - $billingAmount;goto UKirQ;K2_Xh:$captureAmount = $AmazonTrading->getCaptureAmount();goto aRd8_;OeP0R:if (!($payment_total > $sumAuthoriAmount && $amazon_status == 'オーソリ' || $totalBillingAmount > 0 && $amazon_status == '売上')) {goto YcJny;}goto RuG3O;Oalo9:$AmazonTrading->setRefundId($r->refundId);goto J_CHX;b_xbo:$refundAmount = $captureAmount > $totalRefundAmount ? $totalRefundAmount : $captureAmount;goto NPr3b;nEhW1:$amazonChargeId = $AmazonTrading->getChargeId();goto tZ23v;rfU3N:$billableAmount = $billableAmount - $addAmount;goto zvaM7;isn9Q:$this->entityManager->persist($newAmazonTrading);goto YEV5n;HEpfN:Qzj9U:goto j1r5g;O1e6C:XiTEu:goto Nbhnm;Md5Oo:n9rqB:goto kjgtC;j1r5g:$AmazonTrading->setCaptureAmount($captureAmount - $refundAmount);goto nvXmk;nvXmk:$AmazonTrading->setRefundCount($refundCount);goto QvOaV;GTLgK:$newAmazonTrading->setRefundCount(0);goto Gpupp;Gpupp:$Order->addAmazonTrading($newAmazonTrading);goto rfU3N;Yn2t6:IUCet:goto AugNy;YEV5n:$this->entityManager->flush($newAmazonTrading);goto Yn2t6;KHW6P:if (!(isset($r->reasonCode) && $r === 'status_failed')) {goto IwVZt;}goto ndlRO;Nbhnm:goto PzsjB;goto Md5Oo;ndlRO:logs('amazon_pay_v2')->error('aws request error from admin_order r=' . var_export($r, true));goto t14Ie;fTiuy:$newAmazonTrading = new AmazonTrading();goto vQSAD;EM2cb:$newAmazonTrading->setChargeId($newAmazonChargeId);goto AJiYP;YahX9:udKpF:goto QM5w7;JbEom:$newAmazonTrading->setAuthoriAmount($addAmount);goto E_HLl;ygcqV:$newAmazonTrading = new \Plugin\AmazonPay\Entity\AmazonTrading();goto kJEGj;AJiYP:$newAmazonTrading->setAuthoriAmount($addAmount);goto lWS8H;tlTjc:$addAmount = $payment_total - $sumAuthoriAmount;goto nQNPx;fZrtt:if (!isset($r->reasonCode)) {goto JN1Hu;}goto YBNMT;AugNy:YcJny:goto jG3UM;sFfkm:goto aBtmO;goto irPrq;TYUJz:goto q7sU8;goto PK161;jG3UM:q7sU8:goto myAn2;dOwxd:if (!($refundAmount > 0)) {goto udKpF;}goto D35IZ;a3Bra:if (!($version == 'CV2')) {goto gxdWg;}goto Oalo9;tZ23v:kw3PX:goto z2dB9;Vra6o:$r = $this->amazonRequestService->createCharge($amazonChargePermissionId, $addAmount);goto KHW6P;PK161:dhQZk:goto q6cMv;D8Rp1:}goto C7Kj6;wNQhQ:$AmazonTradings = $Order->getAmazonTradings();goto yIFzD;yCSaD:if ($r === false) {goto xG3t3;}goto ucYLS;tEKrW:goto Xkw6o;goto Wz05n;lA1_J:$this->entityManager->flush();goto cZRit;V8a1q:goto TFntj;goto ptGHf;NEQ4q:V1gh1:goto Z_e04;QAqFi:VITPL:goto pGslQ;QfNSL:$AmazonTradings = $Order->getAmazonPayV2AmazonTradings();goto PVVjm;a_Ina:$version = 'CV2';goto wMbli;MbYd8:$Customer = $Order->getCustomer();goto USvfw;r5qRu:$amazonStatusRepositoryV1 = $this->container->get(\Plugin\AmazonPay\Repository\Master\AmazonStatusRepository::class);goto HW3nG;GKJCI:goto VITPL;goto QcpE5;I6247:if ($version == 'CV2') {goto y1o9m;}goto zypFs;Wz05n:gH0fE:goto b1dCZ;pGslQ:qNXVR:goto FcIyF;yIFzD:$amazon_status = $Order->getAmazonStatus()->getName();goto HyAVE;TX0so:if (is_object($r)) {goto gH0fE;}goto yCSaD;aLvWp:$this->pointProcessor->rollback($Order, new PurchaseContext());goto bq2fV;mLzbL:$totalBillingAmount = $payment_total - $sumCaptureAmount;goto HGaCm;w_NAW:$OrderStatus = $this->orderStatusRepository->find($this->orderStatusRepository->find(OrderStatus::CANCEL));goto gsVKn;w1VfH:$Order->setPaymentDate(new \DateTime());goto DclLv;VuSYg:$billableAmount = $Order->getBillableAmount();goto s04nu;JG9ts:TFntj:goto F_4Yh;W1C4d:d1yR_:goto mLzbL;JMpn_:goto qdRqo;goto c3nXY;z3u_2:$totalRefundAmount = $allRefund_flg ? $payment_total : $sumCaptureAmount - $payment_total;goto UUPUP;dNIKu:Zk27n:goto eN1cy;USvfw:if (!$Customer) {goto AfBeh;}goto rn3ID;gBqou:g2Yuv:goto tzJw9;gQ3Hq:$V1Enable_flg = $this->pluginRepository->findOneBy(array('code' => 'AmazonPay', 'enabled' => Constant::ENABLED));goto R8bM1;ud7e0:$Order->setBillableAmount($billableAmount);goto Xaj1K;ptGHf:mFGyc:goto iA6Xd;P3D5N:$sumCaptureAmount = 0;goto RRqpi;tRpXA:if (!$Customer) {goto ElYZv;}goto dtlak;ucYLS:$amazonErr = "下記のエラーが発生しました。\n" . var_export($r, true) . "\n";goto HxmiW;XKT1J:goto qNXVR;goto C7qKm;poFJR:goto VITPL;goto dNIKu;PVVjm:$amazon_status = $Order->getAmazonPayV2AmazonStatus()->getName();goto a_Ina;eN1cy:$AmazonStatus = $this->amazonStatusRepository->find(AmazonStatus::CANCEL);goto QAqFi;OcbAB:if ($Order->getPaymentMethod() === 'AmazonPay') {goto kCmMo;}goto DHjj2;Nc0nG:if ($version == 'CV1') {goto uDY3I;}goto I6247;MJxW8:$payment_total = (int) $Order->getPaymentTotal();goto Nc0nG;QcpE5:z7X2Y:goto XlQgP;rn3ID:$this->pointProcessor->rollback($Order, new PurchaseContext());goto HDbsY;qIxxu:$Order->setAmazonStatus($AmazonStatus);goto wh4qB;LKeiA:ji6Zi:goto abLUV;QkTYz:goto O83_5;goto zWvR_;aD42f:if ($version == 'CV2') {goto ji6Zi;}goto JMpn_;HxmiW:goto IwvvJ;goto Uz2bI;C7Kj6:eoUEL:goto cAvWi;xBa4m:$version = '';goto OcbAB;c3nXY:O_aA_:goto qIxxu;zWvR_:kCmMo:goto gQ3Hq;xSsKU:$sumAuthoriAmount = 0;goto P3D5N;FcIyF:if ($version == 'CV1') {goto O_aA_;}goto aD42f;uYfIg:$amazonErr = 'CV1受注のリクエストを受け付けましたが、CV1が有効化されていません。';goto dT2DK;HDbsY:AfBeh:goto x2f7N;KqTA_:if ($version == 'CV2') {goto g2Yuv;}goto ADEJ2;dtlak:$Customer->setPoint(intval($Customer->getPoint()) - intval($Order->getAddPoint()));goto aLvWp;cAvWi:if (isset($r->reasonCode)) {goto mFGyc;}goto TX0so;y7MEH:mZOo2:goto MkjME;HyAVE:$version = 'CV1';goto OSqaX;IjGHV:if ($version == 'CV1') {goto z7X2Y;}goto MEq0H;Uz2bI:xG3t3:goto AzH71;abLUV:$Order->setAmazonPayV2AmazonStatus($AmazonStatus);goto IHflF;Xaj1K:$AmazonStatus = $amazonStatusRepositoryV1->find(AmazonStatus::CAPTURE);goto Bl9Rq;EJ0LS:$billableAmount = $Order->getAmazonPayV2BillableAmount();goto W1C4d;v6YYp:}public function checkShippingPref($shippingAddress){goto aVudd;aVudd:switch ($shippingAddress->stateOrRegion) {case "東京":$shippingAddress->stateOrRegion = "東京都";goto tqC_s;case "大阪":$shippingAddress->stateOrRegion = "大阪府";goto tqC_s;case "京都":$shippingAddress->stateOrRegion = "京都府";goto tqC_s;case "東京都":goto tqC_s;case "大阪府":goto tqC_s;case "京都府":goto tqC_s;case "北海道":goto tqC_s;default:goto fTs3L;fTs3L:if (preg_match('/県$/u', $shippingAddress->stateOrRegion)) {goto lw11Q;}goto Swk9C;KFZOH:lw11Q:goto NSaHM;Swk9C:$shippingAddress->stateOrRegion .= '県';goto KFZOH;NSaHM:}goto YIm97;KjLA1:logs('amazon_pay_v2')->info('*** 都道府県マッチングエラー *** addr = ' . var_export($shippingAddress, true));goto YpCo2;iDRJX:return true;goto pWW35;YIm97:rEwAb:goto q7GT1;Gs38x:MZxBF:goto iDRJX;I6a2h:$Pref = $this->prefRepository->findOneBy(['name' => $shippingAddress->stateOrRegion]);goto VqTF_;VqTF_:if (!empty($Pref)) {goto MZxBF;}goto KjLA1;q7GT1:tqC_s:goto I6a2h;YpCo2:return false;goto Gs38x;pWW35:}public function createPassword($length = 8){goto i5g5I;B5m9d:$pwd[] = $pwd_strings[$key][array_rand($pwd_strings[$key])];goto tfQvk;W6o7t:$pwd_strings = ["sletter" => range('a', 'z'), "cletter" => range('A', 'Z'), "number" => range('0', '9')];goto VXcD1;oU3t5:$key = array_rand($pwd_strings);goto B5m9d;IUNfx:return implode($pwd);goto EhwFp;zrVhk:skf1z:goto xIuk_;c6uIV:if (!(count($pwd) < $length)) {goto skf1z;}goto oU3t5;tfQvk:goto ZGC78;goto zrVhk;i5g5I:$pwd = [];goto W6o7t;xIuk_:shuffle($pwd);goto IUNfx;VXcD1:ZGC78:goto c6uIV;EhwFp:}}