<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2022-12-15 15:50:06              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2_42;use Eccube\Event\TemplateEvent;use Eccube\Event\EventArgs;use Eccube\Event\EccubeEvents;use Eccube\Common\EccubeConfig;use Eccube\Repository\PaymentRepository;use Eccube\Repository\PluginRepository;use Eccube\Service\OrderHelper;use Eccube\Service\CartService;use Plugin\AmazonPayV2_42\Repository\ConfigRepository;use Plugin\AmazonPayV2_42\Service\AmazonRequestService;use Plugin\AmazonPayV2_42\Service\Method\AmazonPay;use Plugin\AmazonPayV2_42\phpseclib\Crypt\Random;use Symfony\Component\DependencyInjection\ContainerInterface;use Symfony\Component\EventDispatcher\EventSubscriberInterface;use Symfony\Component\HttpFoundation\RequestStack;use Symfony\Component\HttpFoundation\Session\SessionInterface;use Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface;use Symfony\Component\Routing\Generator\UrlGeneratorInterface;use Eccube\Repository\DeliveryRepository;use Eccube\Repository\PaymentOptionRepository;use Plugin\AmazonPayV2_42\Entity\AmazonBanner;use Plugin\AmazonPayV2_42\Service\AmazonBannerService;class AmazonPayEvent implements EventSubscriberInterface{private $sessionAmazonProfileKey = 'amazon_pay_v2.profile';private $sessionAmazonCheckoutSessionIdKey = 'amazon_pay_v2.checkout_session_id';private $sessionAmazonLoginStateKey = 'amazon_pay_v2.amazon_login_state';protected $eccubeConfig;private $router;protected $configRepository;protected $amazonRequestService;protected $deliveryRepository;protected $paymentOptionRepository;protected $amazonBannerService;public function __construct(RequestStack $requestStack, SessionInterface $session, TokenStorageInterface $tokenStorage, EccubeConfig $eccubeConfig, UrlGeneratorInterface $router, PaymentRepository $paymentRepository, PluginRepository $pluginRepository, ConfigRepository $configRepository, ContainerInterface $container, OrderHelper $orderHelper, CartService $cartService, AmazonRequestService $amazonRequestService, DeliveryRepository $deliveryRepository, PaymentOptionRepository $paymentOptionRepository, AmazonBannerService $amazonBannerService){goto ieHjN;mP8rT:$this->paymentRepository = $paymentRepository;goto vxP5I;Kg8yO:$this->cartService = $cartService;goto b7sN1;rP7rA:$this->tokenStorage = $tokenStorage;goto lQFNc;lQFNc:$this->eccubeConfig = $eccubeConfig;goto a_UNb;LncGI:$this->amazonBannerService = $amazonBannerService;goto M4UVN;kUtrz:$this->session = $session;goto rP7rA;b7sN1:$this->amazonRequestService = $amazonRequestService;goto RKOWK;vxP5I:$this->pluginRepository = $pluginRepository;goto kt98n;RKOWK:$this->deliveryRepository = $deliveryRepository;goto kq21a;a_UNb:$this->router = $router;goto mP8rT;ieHjN:$this->requestStack = $requestStack;goto kUtrz;kt98n:$this->configRepository = $configRepository;goto cDNbJ;cDNbJ:$this->container = $container;goto C5opm;kq21a:$this->paymentOptionRepository = $paymentOptionRepository;goto LncGI;C5opm:$this->orderHelper = $orderHelper;goto Kg8yO;M4UVN:}public static function getSubscribedEvents(){return [EccubeEvents::FRONT_CART_BUYSTEP_COMPLETE => 'amazon_cart_buystep', 'Cart/index.twig' => 'cart', 'Shopping/index.twig' => 'amazon_pay_shopping', 'Mypage/login.twig' => 'mypage_login', 'Shopping/confirm.twig' => 'amazon_pay_shopping_confirm', 'index.twig' => 'add_banner_on_top'];}public function add_banner_on_top(TemplateEvent $event){goto N22Fh;GYvFe:YrDMk:goto zC33d;SuNFk:lo1LN:goto TBAWH;PUYdV:if (!($Config->getUseAmazonBannerOnTop() == $this->eccubeConfig['amazon_pay_v2']['toggle']['off'])) {goto YrDMk;}goto R1nd8;zC33d:if (!($Config->getAmazonBannerPlaceOnTop() == $this->eccubeConfig['amazon_pay_v2']['button_place']['auto'])) {goto lo1LN;}goto kA01H;R1nd8:return;goto GYvFe;N22Fh:$Config = $this->configRepository->get();goto PUYdV;TBAWH:$event->addSnippet($this->amazonBannerService->getBannerCodeOnTop(), false);goto kuV3r;kA01H:$event->addSnippet('@AmazonPayV2_42/default/amazon_banner_auto_on_top.twig');goto SuNFk;kuV3r:}public function cart(TemplateEvent $event){goto fdYuu;rLU3o:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['sandbox'];goto oLaqO;tbiFn:$Payment = $this->paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto fJzct;ZIAUk:$event->addSnippet('@AmazonPayV2_42/default/Cart/button.twig');goto p1xwA;qyCNz:$parameters['AmazonPayV2Config'] = $Config;goto GkqhW;xlbSF:foreach ($parameters['Carts'] as $Cart) {goto KgAQF;TK_cC:$payload = $this->amazonRequestService->createCheckoutSessionPayload($Cart->getCartKey());goto WkX4o;WkX4o:$signature = $this->amazonRequestService->signaturePayload($payload);goto CY5j3;KgAQF:$cartKey = $Cart->getCartKey();goto TK_cC;CY5j3:$parameters['cart'][$cartKey]['payload'] = $payload;goto eTf2A;u_d2x:kMepR:goto Jtwo6;eTf2A:$parameters['cart'][$cartKey]['signature'] = $signature;goto u_d2x;Jtwo6:}goto IXqpr;Xeh6t:pQH4d:goto zBpOL;GNYXZ:$AmazonSaleTypes = [];goto r2AK3;oLaqO:goto VWKy_;goto y4e67;acisl:$event->addSnippet('@AmazonPayV2_42/default/Cart/amazon_pay_js.twig');goto yt54S;ANBwR:gI6Zf:goto gMRiC;LUSYc:VWKy_:goto x53rB;OauDX:yrIBY:goto tbiFn;ZxJ2t:$event->addSnippet('@AmazonPayV2_42/default/amazon_banner_auto_on_cart.twig');goto G6lAf;FqMii:if (!empty($parameters['Carts'])) {goto BoHpV;}goto NWMAq;y4e67:IvOyu:goto fnqtZ;r2AK3:foreach ($AmazonDeliveries as $AmazonDelivery) {goto iXql4;s4nin:$AmazonSaleTypes[] = $Delivery->getSaleType()->getId();goto JwSRl;iXql4:$Delivery = $this->deliveryRepository->findOneBy(['id' => $AmazonDelivery->getDelivery()->getId()]);goto s4nin;JwSRl:FZOyj:goto EtM4V;EtM4V:}goto ANBwR;l3geC:BoHpV:goto OB0hW;okCeX:if (!($Config->getAmazonBannerPlaceOnCart() == $this->eccubeConfig['amazon_pay_v2']['button_place']['auto'])) {goto nYl4z;}goto ZxJ2t;fnqtZ:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['prod'];goto LUSYc;TXQma:return;goto OauDX;zBpOL:$parameters = $event->getParameters();goto FqMii;pguPQ:$event->addSnippet($this->amazonBannerService->getBannerCodeOnCart(), false);goto Xeh6t;q1k0l:if (!($Config->getUseAmazonBannerOnCart() != $this->eccubeConfig['amazon_pay_v2']['toggle']['off'])) {goto pQH4d;}goto okCeX;GkqhW:if ($Config->getEnv() == $this->eccubeConfig['amazon_pay_v2']['env']['prod']) {goto IvOyu;}goto rLU3o;NWMAq:return;goto l3geC;yt54S:if (!($Config->getCartButtonPlace() == $this->eccubeConfig['amazon_pay_v2']['button_place']['auto'])) {goto hMK3X;}goto ZIAUk;G6lAf:nYl4z:goto pguPQ;p1xwA:hMK3X:goto RrleH;fJzct:$AmazonDeliveries = $this->paymentOptionRepository->findBy(['payment_id' => $Payment->getId()]);goto GNYXZ;fdYuu:$Config = $this->configRepository->get();goto q1k0l;OB0hW:if (!($Config->getUseCartButton() == $this->eccubeConfig['amazon_pay_v2']['toggle']['off'])) {goto yrIBY;}goto TXQma;x53rB:$event->setParameters($parameters);goto acisl;gMRiC:$parameters['AmazonSaleTypes'] = $AmazonSaleTypes;goto xlbSF;IXqpr:d8ciB:goto qyCNz;RrleH:}public function amazon_cart_buystep(EventArgs $event){goto Dl0DT;mdnLN:qh4p5:goto XMqTs;Dl0DT:if (!($this->orderHelper->getNonmember() && $this->session->get($this->sessionAmazonProfileKey))) {goto qh4p5;}goto xYykZ;iUVuL:$this->cartService->save();goto mdnLN;xYykZ:$this->session->remove(OrderHelper::SESSION_NON_MEMBER);goto xgOnW;qrgWO:$this->cartService->setPreOrderId(null);goto iUVuL;xgOnW:$this->session->remove($this->sessionAmazonProfileKey);goto qrgWO;XMqTs:}public function amazon_pay_shopping(TemplateEvent $event){goto OZ2zE;W7YVG:jKZHq:goto IU2Bk;L5Jar:JDYed:goto I5UoB;tvucG:$Payment = $Order->getPayment();goto U3QW6;IYaPV:exit;goto kEnE4;UwLuG:VCtwH:goto fmegp;XgJiR:$parameters = $event->getParameters();goto kqRjC;KtIt7:$referer = $request->headers->get('referer');goto Vs_JQ;LsDKb:if ($Config->getEnv() == $this->eccubeConfig['amazon_pay_v2']['env']['prod']) {goto EwjDm;}goto iS9Ao;ggMdB:$event->addSnippet('@AmazonPayV2_42/default/Shopping/customer_regist_v2.twig');goto kEB5o;IDZIs:$uri = $request->getUri();goto UiV7r;N0zF4:if (!(preg_match('/shopping\\/amazon_pay/', $uri) == false)) {goto CYhYY;}goto KtIt7;Ed4ML:$parameters['AmazonPayV2Config'] = $Config;goto Ua7Eb;KJbAI:CYhYY:goto lv_Vd;l027n:goto VCtwH;goto T7xPg;lv_Vd:$Config = $this->configRepository->get();goto fAqkx;fIRKZ:header("Location:" . $this->container->get('router')->generate('amazon_pay_shopping'));goto IYaPV;iS9Ao:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['sandbox'];goto l027n;kqRjC:$parameters['amazonCheckoutSessionId'] = $amazonCheckoutSessionId;goto Ed4ML;T7xPg:EwjDm:goto gA68F;Ua7Eb:if ($this->pluginRepository->findOneBy(['code' => 'MailMagazine42', 'enabled' => true]) || $this->pluginRepository->findOneBy(['code' => 'PostCarrier42', 'enabled' => true])) {goto JDYed;}goto mxjVa;FRcWk:goto jKZHq;goto L5Jar;uBnXR:return;goto KJbAI;gA68F:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['prod'];goto UwLuG;OZ2zE:$request = $this->requestStack->getMasterRequest();goto IDZIs;I5UoB:$useMailMagazine = true;goto W7YVG;kEB5o:$amazonCheckoutSessionId = $this->session->get($this->sessionAmazonCheckoutSessionIdKey);goto XgJiR;mxjVa:$useMailMagazine = false;goto FRcWk;fmegp:$event->setParameters($parameters);goto WkRDm;UiV7r:$parameters = $event->getParameters();goto N0zF4;fAqkx:$event->addSnippet('@AmazonPayV2_42/default/Shopping/widgets.twig');goto ggMdB;Vs_JQ:$Order = $parameters['Order'];goto tvucG;IU2Bk:$parameters['useMailMagazine'] = $useMailMagazine;goto LsDKb;kEnE4:bnbML:goto uBnXR;U3QW6:if (!($Payment && $Payment->getMethodClass() === AmazonPay::class && preg_match('/shopping_coupon/', $referer))) {goto bnbML;}goto fIRKZ;WkRDm:}public function amazon_pay_shopping_confirm(TemplateEvent $event){goto khLhU;dViyU:if ($this->pluginRepository->findOneBy(['code' => 'MailMagazine42', 'enabled' => true]) || $this->pluginRepository->findOneBy(['code' => 'PostCarrier42', 'enabled' => true])) {goto ykEFI;}goto fPIK2;Ao9b2:$event->addSnippet('@AmazonPayV2_42/default/Shopping/confirm_widgets.twig');goto ijLUq;mtU9N:$useMailMagazine = true;goto s4Vup;icM1r:$event->setParameters($parameters);goto ZFnCE;Y4b2t:jB6aU:goto eemQJ;fPIK2:$useMailMagazine = false;goto uGIBj;s4Vup:l5POY:goto C4lv9;QKr5d:if ($Config->getEnv() == $this->eccubeConfig['amazon_pay_v2']['env']['prod']) {goto jB6aU;}goto UkxWV;lLsNX:WIJP6:goto BUJgA;uGIBj:goto l5POY;goto ubmiM;BUJgA:$Config = $this->configRepository->get();goto Ao9b2;khLhU:$request = $this->requestStack->getMasterRequest();goto qRqN6;C4lv9:$parameters['useMailMagazine'] = $useMailMagazine;goto QKr5d;ue3pu:$parameters['AmazonPayV2Config'] = $Config;goto dViyU;UkxWV:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['sandbox'];goto dbKIv;dbKIv:goto voRea;goto Y4b2t;SXq80:if (!(preg_match('/shopping\\/amazon_pay/', $uri) == false)) {goto WIJP6;}goto WrETH;ijLUq:$event->addSnippet('@AmazonPayV2_42/default/Shopping/confirm_customer_regist_v2.twig');goto FMycf;WrETH:return;goto lLsNX;Z3b5F:voRea:goto icM1r;qRqN6:$uri = $request->getUri();goto SXq80;eemQJ:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['prod'];goto Z3b5F;ubmiM:ykEFI:goto mtU9N;FMycf:$parameters = $event->getParameters();goto ue3pu;ZFnCE:}public function mypage_login(TemplateEvent $event){goto ZyohM;Cb7ZG:$event->addSnippet('@AmazonPayV2_42/default/Mypage/login_page_button.twig');goto hb23K;Bi2KT:$payload = $this->amazonRequestService->createSigninPayload($returnUrl);goto e6Qtj;X_mwY:$this->session->set($this->sessionAmazonLoginStateKey, $state);goto iFbO7;kFH9c:if (!($Config->getUseMypageLoginButton() == $this->eccubeConfig['amazon_pay_v2']['toggle']['off'])) {goto M6IgD;}goto Jv5PQ;Kxx2f:$event->setParameters($parameters);goto aL9_7;LHERb:$parameters['buttonColor'] = $Config->getMypageLoginButtonColor();goto dK9lB;yVsyc:lzNQU:goto Kxx2f;Vd1Y4:if ($Config->getEnv() == $this->eccubeConfig['amazon_pay_v2']['env']['prod']) {goto Rkltv;}goto K92Fr;hb23K:WH7bE:goto mFpkw;e6Qtj:$signature = $this->amazonRequestService->signaturePayload($payload);goto nlGXS;LAAiL:$returnUrl = $this->router->generate('login_with_amazon', ['state' => $state], UrlGeneratorInterface::ABSOLUTE_URL);goto CW1cS;dK9lB:$parameters['AmazonPayV2Config'] = $Config;goto Vd1Y4;nlGXS:$parameters['payload'] = $payload;goto h2lcR;mFpkw:$event->addSnippet('@AmazonPayV2_42/default/Mypage/amazon_login_js.twig');goto PR20z;ZyohM:$Config = $this->configRepository->get();goto kFH9c;iFbO7:KhPFj:goto LAAiL;Jv5PQ:return;goto fQOs4;DUlXn:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['prod'];goto yVsyc;y8yHg:goto lzNQU;goto Ndb0S;aL9_7:if (!($Config->getMypageLoginButtonPlace() == $this->eccubeConfig['amazon_pay_v2']['button_place']['auto'])) {goto WH7bE;}goto Cb7ZG;OSoNQ:if ($state) {goto KhPFj;}goto n8BoQ;fQOs4:M6IgD:goto WoJtW;h2lcR:$parameters['signature'] = $signature;goto LHERb;n8BoQ:$state = bin2hex(Random::string(16));goto X_mwY;WoJtW:$state = $this->session->get($this->sessionAmazonLoginStateKey);goto OSoNQ;K92Fr:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['sandbox'];goto y8yHg;Ndb0S:Rkltv:goto DUlXn;CW1cS:$parameters = $event->getParameters();goto Bi2KT;PR20z:}}