<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2022-12-15 15:50:07              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2_42\Controller\Admin;use Eccube\Common\Constant;use Eccube\Controller\AbstractController;use Eccube\Entity\Order;use Eccube\Repository\PluginRepository;use Eccube\Repository\Master\PageMaxRepository;use Eccube\Repository\OrderRepository;use Eccube\Repository\PaymentRepository;use Eccube\Util\FormUtil;use Knp\Component\Pager\PaginatorInterface;use Plugin\AmazonPayV2_42\Form\Type\Admin\SearchPaymentType;use Plugin\AmazonPayV2_42\Service\Method\AmazonPay;use Plugin\AmazonPayV2_42\Service\AmazonOrderHelper;use Plugin\AmazonPayV2_42\Repository\Master\AmazonStatusRepository;use Symfony\Component\Routing\Annotation\Route;use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;use Symfony\Component\HttpFoundation\Request;class PaymentStatusController extends AbstractController{protected $paymentStatusRepository;protected $pageMaxRepository;protected $orderRepository;public function __construct(AmazonStatusRepository $amazonStatusRepository, AmazonOrderHelper $amazonOrderHelper, PageMaxRepository $pageMaxRepository, OrderRepository $orderRepository, PaymentRepository $paymentRepository, PluginRepository $pluginRepository){goto CaCjP;CaCjP:$this->amazonStatusRepository = $amazonStatusRepository;goto AlR2K;JVskr:$this->pluginRepository = $pluginRepository;goto hdZAN;pdX3B:$this->paymentRepository = $paymentRepository;goto JVskr;X09Mz:$this->pageMaxRepository = $pageMaxRepository;goto gISMB;AlR2K:$this->amazonOrderHelper = $amazonOrderHelper;goto X09Mz;gISMB:$this->orderRepository = $orderRepository;goto pdX3B;hdZAN:}    /**
     * 決済状況一覧画面
     *
     * @Route("/%eccube_admin_route%/amazon_pay_v2/payment_status", name="amazon_pay_v2_admin_payment_status")
     * @Route("/%eccube_admin_route%/amazon_pay_v2/payment_status/{page_no}", requirements={"page_no" = "\d+"}, name="amazon_pay_v2_admin_payment_status_pageno")
     * @Template("@AmazonPayV2_42/admin/Order/payment_status.twig")
     */
public function index(Request $request, PaginatorInterface $paginator, $page_no = null){goto Ebkfx;MV9qK:QKedk:goto B8Myb;Ebkfx:$searchForm = $this->createForm(SearchPaymentType::class);goto MTc5I;o8Lqz:$pageMaxis = $this->pageMaxRepository->findAll();goto kojuZ;AfPVp:$viewData = $this->session->get('amazon_pay_v2.admin.payment_status.search', []);goto lvgVT;SetdT:return ['searchForm' => $searchForm->createView(), 'pagination' => $pagination, 'pageMaxis' => $pageMaxis, 'page_no' => $page_no, 'page_count' => $page_count, 'has_errors' => false];goto n0O99;suCnC:goto C2SE3;goto E2ORt;TT38V:$searchForm->handleRequest($request);goto E3LkT;wELqV:$this->session->set('amazon_pay_v2.admin.payment_status.search.page_no', $page_no);goto RIzJe;HsfUT:if (null !== $page_no || $request->get('resume')) {goto QKedk;}goto UG1hn;SoHQU:$page_count_param = (int) $request->get('page_count');goto o8Lqz;uF7QF:$pagination = $paginator->paginate($qb, $page_no, $page_count);goto SetdT;XenT_:$this->session->set('amazon_pay_v2.admin.payment_status.search.page_no', $page_no);goto pKWHF;QvHeP:cPmRM:goto ITONP;UG1hn:$page_no = 1;goto iolha;DuOp3:C2SE3:goto Y1q49;wgALN:goto Sq1uS;goto rOAhc;ITONP:$this->session->set('amazon_pay_v2.admin.payment_status.search.page_no', (int) $page_no);goto bMdkt;bXPK7:return ['searchForm' => $searchForm->createView(), 'pagination' => [], 'pageMaxis' => $pageMaxis, 'page_no' => $page_no, 'page_count' => $page_count, 'has_errors' => true];goto wgALN;HTnud:pehsq:goto suCnC;UxypC:$searchData = $searchForm->getData();goto owpO2;bMdkt:mZmMU:goto AfPVp;Y1q49:$qb = $this->createQueryBuilder($searchData);goto uF7QF;uahGe:GwxN8:goto Uqmna;pKWHF:Sq1uS:goto DuOp3;rOAhc:uWchc:goto wPgw_;hm3QN:goto mZmMU;goto QvHeP;kojuZ:if (!$page_count_param) {goto L9Q7I;}goto dRmfW;iolha:$searchData = [];goto fPtdn;Uqmna:L9Q7I:goto GNuIA;MTc5I:$page_count = $this->session->get('amazon_pay_v2.admin.payment_status.search.page_count', $this->eccubeConfig->get('eccube_default_page_count'));goto SoHQU;GNuIA:if ('POST' === $request->getMethod()) {goto YPaAn;}goto HsfUT;lvgVT:$searchData = FormUtil::submitAndGetData($searchForm, $viewData);goto HTnud;E3LkT:if ($searchForm->isSubmitted() && $searchForm->isValid()) {goto uWchc;}goto bXPK7;fPtdn:$this->session->set('amazon_pay_v2.admin.payment_status.search', $searchData);goto wELqV;E2ORt:YPaAn:goto TT38V;owpO2:$this->session->set('amazon_pay_v2.admin.payment_status.search', FormUtil::getViewData($searchForm));goto XenT_;RIzJe:goto pehsq;goto MV9qK;dRmfW:foreach ($pageMaxis as $pageMax) {goto STcXP;tmKw5:w7SHg:goto DMf5d;pC7Pe:$page_count = $pageMax->getName();goto ONjv4;et0V_:goto GwxN8;goto tmKw5;ONjv4:$this->session->set('amazon_pay_v2.admin.payment_status.search.page_count', $page_count);goto et0V_;DMf5d:ztKpj:goto GDj0X;STcXP:if (!($page_count_param == $pageMax->getName())) {goto w7SHg;}goto pC7Pe;GDj0X:}goto uahGe;wPgw_:$page_no = 1;goto UxypC;vAbWe:$page_no = $this->session->get('amazon_pay_v2.admin.payment_status.search.page_no', 1);goto hm3QN;B8Myb:if ($page_no) {goto cPmRM;}goto vAbWe;n0O99:}    /**
     * 一括処理.
     *
     * @Route("/%eccube_admin_route%/amazon_pay_v2/payment_status/request_action/", name="amazon_pay_v2_admin_payment_status_request", methods={"POST"})
     */
public function requestAction(Request $request){goto UwBIF;ybxDH:$ids = $request->get($amazon_request . '_id');goto sZzAr;jJgyd:UtqDW:goto vSEEm;pxe26:YGFDL:goto EdTCu;GHGzr:if (isset($amazon_request)) {goto LFbRb;}goto ZWnB6;mEsE5:sBNNe:goto oGo1q;mWKVN:$this->isTokenValid();goto bEasG;EdTCu:$request_name = $amazon_request == 'capture' ? '売上' : '取消';goto UEDyD;oGo1q:$ids = [$requestOrderId];goto pxe26;wCdsx:LFbRb:goto mWKVN;UEDyD:$Orders = $this->orderRepository->findBy(['id' => $ids]);goto kFUkR;w1vQ2:if (!empty($requestOrderId)) {goto sBNNe;}goto ybxDH;bEasG:$requestOrderId = $request->get('amazon_order_id');goto w1vQ2;sZzAr:goto YGFDL;goto mEsE5;UwBIF:$amazon_request = $request->get('amazon_request');goto GHGzr;kFUkR:foreach ($Orders as $Order) {goto cvFqy;bvx_q:$this->addSuccess($result_message, 'admin');goto H00R1;V_aC7:HjwzK:goto Otf8n;yMlxd:$result_message = "■注文番号:" . $Order->getId() . " ： " . $request_name . "処理に失敗しました。" . $amazonErr;goto ZRH0n;nMchz:DW5kb:goto nV_ep;Otf8n:$result_message = "■注文番号:" . $Order->getId() . " ： " . $request_name . "処理に成功しました。";goto bvx_q;H00R1:Icngg:goto nMchz;cvFqy:$amazonErr = $this->amazonOrderHelper->adminRequest($amazon_request, $Order);goto bPEfB;bPEfB:if (empty($amazonErr)) {goto HjwzK;}goto yMlxd;ZRH0n:$this->addError($result_message, 'admin');goto q59Xu;q59Xu:goto Icngg;goto V_aC7;nV_ep:}goto jJgyd;vSEEm:return $this->redirectToRoute('amazon_pay_v2_admin_payment_status_pageno', ['resume' => Constant::ENABLED]);goto amJMC;ZWnB6:throw new BadRequestHttpException();goto wCdsx;amJMC:}private function createQueryBuilder(array $searchData){goto Qu1C9;F78ph:unZt2:goto JzBdk;EhIk9:$qb->andWhere($qb->expr()->orX($qb->expr()->eq('o.Payment', ':PaymentV1'), $qb->expr()->eq('o.Payment', ':PaymentV2')))->setParameter('PaymentV1', $PaymentV1)->setParameter('PaymentV2', $PaymentV2)->andWhere($qb->expr()->orX($qb->expr()->isNotNull('o.AmazonStatus'), $qb->expr()->isNotNull('o.AmazonPayV2AmazonStatus')));goto F78ph;FAMX9:if (isset($V1Enable_flg)) {goto hJTog;}goto eOYnG;Ecofw:$PaymentV1 = $this->paymentRepository->findOneBy(['method_class' => \Plugin\AmazonPay\Service\Method\AmazonPay::class]);goto EhIk9;aeh0S:$V1Enable_flg = $this->pluginRepository->findOneBy(array('code' => 'AmazonPay', 'enabled' => Constant::ENABLED));goto BO6aa;s3FaF:$qb->andWhere($qb->expr()->in('o.AmazonPayV2AmazonStatus', ':AmazonStatuses'))->setParameter('AmazonStatuses', $searchData['AmazonStatuses']);goto eOGpe;eOGpe:J4JjT:goto yhMMf;wmxee:if (!(!empty($searchData['OrderStatuses']) && count($searchData['OrderStatuses']) > 0)) {goto vxryD;}goto zRZtj;zRZtj:$qb->andWhere($qb->expr()->in('o.OrderStatus', ':OrderStatuses'))->setParameter('OrderStatuses', $searchData['OrderStatuses']);goto eFJ6l;IvF6s:hJTog:goto Ecofw;Qu1C9:$qb = $this->entityManager->createQueryBuilder();goto CClok;eOYnG:$qb->andWhere('o.Payment = :PaymentV2')->setParameter('PaymentV2', $PaymentV2)->andWhere('o.AmazonPayV2AmazonStatus IS NOT NULL');goto XE1jf;CClok:$qb->select('o')->from(Order::class, 'o')->orderBy('o.order_date', 'DESC')->addOrderBy('o.id', 'DESC');goto aeh0S;GBKal:if (!(!empty($searchData['AmazonStatuses']) && count($searchData['AmazonStatuses']) > 0)) {goto J4JjT;}goto s3FaF;yhMMf:return $qb;goto hyZGL;JzBdk:$qb->andWhere('o.order_date IS NOT NULL');goto wmxee;XE1jf:goto unZt2;goto IvF6s;BO6aa:$PaymentV2 = $this->paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto FAMX9;eFJ6l:vxryD:goto GBKal;hyZGL:}}