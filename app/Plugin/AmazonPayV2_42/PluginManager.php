<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2022-12-15 15:50:07              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2_42;use Symfony\Component\Filesystem\Filesystem;use Symfony\Component\DependencyInjection\ContainerInterface;use Eccube\Plugin\AbstractPluginManager;use Eccube\Common\Constant;use Eccube\Entity\Payment;use Eccube\Entity\PaymentOption;use Eccube\Entity\Page;use Eccube\Entity\PageLayout;use Eccube\Entity\Csv;use Eccube\Entity\Plugin;use Eccube\Entity\Layout;use Eccube\Entity\BaseInfo;use Eccube\Entity\Master\CsvType;use Eccube\Repository\BaseInfoRepository;use Eccube\Repository\PageRepository;use Eccube\Repository\LayoutRepository;use Eccube\Repository\PageLayoutRepository;use Eccube\Repository\PaymentRepository;use Eccube\Repository\DeliveryRepository;use Eccube\Repository\Master\CsvTypeRepository;use Eccube\Repository\CsvRepository;use Symfony\Component\Mailer\Transport;use Symfony\Component\Mailer\Mailer;use Symfony\Component\Mime\Address;use Symfony\Component\Mime\Email;use Plugin\AmazonPayV2_42\Entity\Master\AmazonStatus;use Plugin\AmazonPayV2_42\Entity\Config;use Plugin\AmazonPayV2_42\Form\Type\Master\ConfigTypeMaster as Master;use Plugin\AmazonPayV2_42\Service\Method\AmazonPay;use Eccube\Repository\PluginRepository;use Eccube\Service\PluginService;use Plugin\AmazonPayV2_42\Entity\AmazonBanner;class PluginManager extends AbstractPluginManager{public function __construct(){goto fSYUP;NXZ9I:$this->target_plugin_data = __DIR__ . '/../../PluginData/AmazonPayV2';goto X9s3O;X9s3O:$this->target_user_data = __DIR__ . '/../../../html/user_data';goto yY07k;dRFQ7:$this->target_css = __DIR__ . '/../../../html/template/default/assets/css';goto NXZ9I;fSYUP:$this->origin_css = __DIR__ . '/Resource/copy/css';goto zCwJv;zCwJv:$this->origin_plugin_data = __DIR__ . '/Resource/PluginData';goto dRFQ7;yY07k:}public function install(array $config, ContainerInterface $serviceContainer){goto Hfs3L;ycfhk:$this->setConfigIni();goto eIQBd;yB9ej:$file->copy($this->origin_plugin_data . '/lastNameList.csv', $this->target_plugin_data . '/lastNameList.csv');goto RJmnk;Hfs3L:$this->copyAssets($serviceContainer);goto xpYs3;eIQBd:try {log_info("AmazonPayプラグイン(V2)インストールメール送信処理開始");$this->sendAutoMail($config, $serviceContainer, 'インストール');} catch (\Exception $e) {log_info("AmazonPayプラグイン(V2)インストールメール送信に失敗しました。" . $e->getMessage());}goto uR1ud;xpYs3:$file = new Filesystem();goto r4jw4;RJmnk:YOngS:goto ycfhk;r4jw4:if ($file->exists($this->target_plugin_data . '/lastNameList.csv')) {goto YOngS;}goto yB9ej;uR1ud:log_info("AmazonPayプラグイン(V2)インストールメール送信処理終了");goto jAoms;jAoms:}public function enable(array $config, ContainerInterface $serviceContainer){goto qvabf;qvabf:$PluginRepository = $serviceContainer->get('Eccube\\Repository\\PluginRepository');goto xUYHX;k83sA:$Plugin = $PluginRepository->findByCode('AmazonPayV2_42');goto lNFs0;KOfA6:$this->createAmazonPay($serviceContainer);goto VnlGi;xUYHX:$PluginService = $serviceContainer->get('Eccube\\Service\\PluginService');goto k83sA;AiWNi:$this->createPlgAmazonPayBanner($serviceContainer);goto pNPjY;lNFs0:$PluginService->generateProxyAndUpdateSchema($Plugin, $config);goto KOfA6;VnlGi:$this->createConfigCsv($serviceContainer);goto AYsIV;sXnlH:$this->createPlgAmazonPayStatus($serviceContainer);goto zT2vs;pNPjY:$this->createPlgAmazonPayConfig($serviceContainer);goto sXnlH;AYsIV:$this->createAmazonPage($serviceContainer);goto AiWNi;zT2vs:}public function disable(array $config, ContainerInterface $serviceContainer){$this->disableAmazonPay($serviceContainer);}public function uninstall(array $config, ContainerInterface $serviceContainer){goto Trn94;sJY3Y:$file = new Filesystem();goto pxbKD;wR42A:$this->removeAmazonPage($serviceContainer);goto e0pd4;UKtfg:log_info("AmazonPayプラグイン(V2)削除メール送信処理終了");goto LR9Hi;e0pd4:try {log_info("AmazonPayプラグイン(V2)削除メール送信処理開始");$this->sendAutoMail($config, $serviceContainer, '削除');} catch (\Exception $e) {log_info("AmazonPayプラグイン(V2)削除メール送信に失敗しました。" . $e->getMessage());}goto UKtfg;pxbKD:$file->remove($this->target_plugin_data . '/lastNameList.csv');goto hLb3a;hLb3a:$this->removeConfigCsv($serviceContainer);goto wR42A;Trn94:$this->removeAssets($serviceContainer);goto sJY3Y;LR9Hi:}public function update(array $config, ContainerInterface $serviceContainer){goto W2T0e;W2T0e:$this->updateAssets($serviceContainer);goto uJliw;uJliw:$this->createAmazonPage($serviceContainer);goto T3yzt;T3yzt:$this->createPlgAmazonPayBanner($serviceContainer);goto mgZE0;mgZE0:try {log_info("AmazonPayプラグイン(V2)アップデートメール送信処理開始");$this->sendAutoMail($config, $serviceContainer, 'アップデート');} catch (\Exception $e) {log_info("AmazonPayプラグイン(V2)アップデートメール送信に失敗しました。" . $e->getMessage());}goto MKE_e;MKE_e:}private function createAmazonPay(ContainerInterface $serviceContainer){goto zsgJA;WTBxS:$entityManage->flush($Payment);goto mknDh;oERPz:$Payment->setRuleMin(0);goto ujRWy;eHEYx:$Payment = $paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto H8FcX;zsgJA:$entityManage = $serviceContainer->get('doctrine.orm.entity_manager');goto NStHk;y5egT:$Payment = $paymentRepository->findOneBy([], ['sort_no' => 'DESC']);goto CrxS_;NStHk:$paymentRepository = $entityManage->getRepository(Payment::class);goto eHEYx;OB2bD:$entityManage->flush($Payment);goto R8qQp;R8qQp:return;goto VP5yx;H8FcX:if (!$Payment) {goto VJGas;}goto B_srB;uyCM8:$Payment->setCharge(0);goto FW4t5;FW4t5:$Payment->setSortNo($sortNo);goto LLJT6;ujRWy:$entityManage->persist($Payment);goto WTBxS;VP5yx:VJGas:goto y5egT;B_srB:$Payment->setVisible(true);goto OB2bD;lVaL_:$Payment->setMethod('Amazon Pay');goto oXbDo;u0w3Y:$Payment = new Payment();goto uyCM8;LLJT6:$Payment->setVisible(true);goto lVaL_;oXbDo:$Payment->setMethodClass(AmazonPay::class);goto oERPz;CrxS_:$sortNo = $Payment ? $Payment->getSortNo() + 1 : 1;goto u0w3Y;mknDh:}private function disableAmazonPay(ContainerInterface $serviceContainer){goto zUsnF;zUsnF:$entityManage = $serviceContainer->get('doctrine.orm.entity_manager');goto MN9df;ixNaf:if (!$Payment) {goto Nw_z0;}goto ALTsD;ybTdg:$entityManage->flush($Payment);goto doaSz;SQ2tu:$Payment = $paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto ixNaf;doaSz:Nw_z0:goto uBH6z;ALTsD:$Payment->setVisible(false);goto ybTdg;MN9df:$paymentRepository = $entityManage->getRepository(Payment::class);goto SQ2tu;uBH6z:}private function createConfigCsv(ContainerInterface $serviceContainer){goto s5zcs;RlyER:$LastCsv = $csvRepository->findOneBy(['CsvType' => $OrderCsvType], ['sort_no' => 'DESC']);goto iNquH;KrN9B:ryzwD:goto k2eYO;iNquH:$sortNo = $LastCsv->getSortNo();goto IxEi0;s5zcs:$entityManage = $serviceContainer->get('doctrine.orm.entity_manager');goto usXSO;IxEi0:$arrCsv = [['entity_name' => 'Eccube\\Entity\\Order', 'field_name' => 'amazonpay_v2_charge_permission_id', 'reference_field_name' => null, 'disp_name' => 'Amazon参照ID'], ['entity_name' => 'Eccube\\Entity\\Order', 'field_name' => 'AmazonPayV2AmazonStatus', 'reference_field_name' => 'name', 'disp_name' => 'Amazon状況']];goto rvtQ8;usXSO:$csvTypeRepository = $entityManage->getRepository(CsvType::class);goto yMxeP;yMxeP:$csvRepository = $entityManage->getRepository(Csv::class);goto IK3Ra;IK3Ra:$OrderCsvType = $csvTypeRepository->find(3);goto RlyER;rvtQ8:foreach ($arrCsv as $c) {goto CpPwH;yQnre:$Csv->setSortNo($sortNo++);goto SRfJU;PjacE:vJmfc:goto A48Bc;QUnim:$Csv->setFieldName($c['field_name']);goto cPP6c;rNK8c:$Csv->setDispName($c['disp_name']);goto yQnre;Sy6oT:$Csv->setUpdateDate(new \DateTime());goto PZuuh;igcFF:goto vjsiH;goto PjacE;A48Bc:$Csv = new Csv();goto sqJ7S;aOoV8:vjsiH:goto REQXK;SRfJU:$Csv->setCreateDate(new \DateTime());goto Sy6oT;sqJ7S:$Csv->setCsvType($OrderCsvType);goto S0EXF;wnnQQ:$entityManage->flush($Csv);goto aOoV8;S0EXF:$Csv->setEntityName($c['entity_name']);goto QUnim;PZuuh:$entityManage->persist($Csv);goto wnnQQ;lVkpN:if (!$Csv) {goto vJmfc;}goto igcFF;CpPwH:$Csv = $csvRepository->findOneBy(['disp_name' => $c['disp_name']]);goto lVkpN;cPP6c:$Csv->setReferenceFieldName($c['reference_field_name']);goto rNK8c;REQXK:}goto KrN9B;k2eYO:}private function removeConfigCsv(ContainerInterface $serviceContainer){goto WHhTQ;PGJv2:$OrderCsvType = $csvTypeRepository->find(3);goto PvWbq;PvWbq:$arrCsv = [['entity_name' => 'Eccube\\Entity\\Order', 'field_name' => 'amazonpay_v2_charge_permission_id', 'reference_field_name' => null, 'disp_name' => 'Amazon参照ID'], ['entity_name' => 'Eccube\\Entity\\Order', 'field_name' => 'AmazonPayV2AmazonStatus', 'reference_field_name' => 'name', 'disp_name' => 'Amazon状況']];goto bmw6o;Nsu7_:u5N3V:goto qpBPi;bmw6o:foreach ($arrCsv as $c) {goto ANu42;wCPXU:if (!$Csv) {goto A443P;}goto uo_R9;jsZlK:GDqEe:goto AdWNO;ANu42:$Csv = $csvRepository->findOneBy($c);goto wCPXU;uo_R9:$entityManage->remove($Csv);goto MMmSO;MMmSO:$entityManage->flush();goto nFYp5;nFYp5:A443P:goto jsZlK;AdWNO:}goto Nsu7_;ylMaE:$csvTypeRepository = $entityManage->getRepository(CsvType::class);goto oE_xU;oE_xU:$csvRepository = $entityManage->getRepository(Csv::class);goto PGJv2;WHhTQ:$entityManage = $serviceContainer->get('doctrine.orm.entity_manager');goto ylMaE;qpBPi:}private function createAmazonPage(ContainerInterface $serviceContainer){goto YbGJn;quboP:foreach ($arrPage as $p) {goto HtlPx;iwcHI:$Page->setName($p['page_name']);goto DnsG3;y9cmF:$PageLayout->setPage($Page);goto CKQir;DnsG3:$Page->setUrl($p['url']);goto UtsmZ;MHpXD:goto O64sC;goto UTi4_;v0XXa:$PageLayout->setLayoutId($Layout->getId());goto V92zB;CKQir:$PageLayout->setPageId($Page->getId());goto Cqtek;uW65I:$entityManage->flush($PageLayout);goto MhzPY;UtsmZ:$Page->setFileName($p['file_name']);goto lOMji;XRmXh:$Page->setMetaRobots('noindex');goto Univi;HtlPx:$Page = $pageRepository->findOneBy(['url' => $p['url']]);goto k9Qxo;k9Qxo:if (!$Page) {goto H4Syb;}goto MHpXD;fbWgU:$entityManage->flush($Page);goto SDEst;MhzPY:O64sC:goto VvFj0;UTi4_:H4Syb:goto nI0AD;SDEst:$PageLayout = new PageLayout();goto y9cmF;Cqtek:$PageLayout->setLayout($Layout);goto v0XXa;V92zB:$PageLayout->setSortNo($sortNo++);goto WOw6B;Cz2TT:$Page->setCreateDate(new \DateTime());goto PbxlC;nI0AD:$Page = new Page();goto iwcHI;PbxlC:$Page->setUpdateDate(new \DateTime());goto XRmXh;Univi:$entityManage->persist($Page);goto fbWgU;lOMji:$Page->setEditType(Page::EDIT_TYPE_DEFAULT);goto Cz2TT;WOw6B:$entityManage->persist($PageLayout);goto uW65I;VvFj0:}goto btfHp;PO0BT:$arrPage = [['page_name' => '商品購入(Amazon Pay)', 'url' => 'amazon_pay_shopping', 'file_name' => 'Shopping/index'], ['page_name' => '商品購入(Amazon Pay)/ご注文確認', 'url' => 'amazon_pay_shopping_confirm', 'file_name' => 'Shopping/confirm']];goto quboP;qG7Bo:$Layout = $layoutRepository->find(2);goto RMvnz;YbGJn:$entityManage = $serviceContainer->get('doctrine.orm.entity_manager');goto aiqWX;RMvnz:$LastPageLayout = $pageLayoutRepository->findOneBy([], ['sort_no' => 'DESC']);goto r0w3E;btHG1:$layoutRepository = $entityManage->getRepository(Layout::class);goto pQX4x;aiqWX:$pageRepository = $entityManage->getRepository(Page::class);goto btHG1;pQX4x:$pageLayoutRepository = $entityManage->getRepository(PageLayout::class);goto qG7Bo;btfHp:gK5kV:goto o6ygI;r0w3E:$sortNo = $LastPageLayout->getSortNo();goto PO0BT;o6ygI:}private function removeAmazonPage(ContainerInterface $serviceContainer){goto CUigV;PKaR0:uCIpn:goto I_nTZ;k_vuF:$pageRepository = $entityManage->getRepository(Page::class);goto jvz3d;ITuL6:foreach ($arrPage as $p) {goto EM2DC;EM2DC:$Page = $pageRepository->findOneBy($p);goto abDu7;LaWRF:$entityManage->flush();goto RQOWi;abDu7:if (!$Page) {goto KXGk6;}goto qFHye;du_JJ:$entityManage->remove($Page);goto LaWRF;ctk3a:kKMwE:goto du_JJ;qFHye:foreach ($Page->getPageLayouts() as $PageLayout) {goto CKey1;vzlP4:baP9d:goto NwFZ4;i309h:$entityManage->remove($PageLayout);goto jigUV;CKey1:$Page->removePageLayout($PageLayout);goto i309h;jigUV:$entityManage->flush($PageLayout);goto vzlP4;NwFZ4:}goto ctk3a;ymfG5:ZoVWv:goto e3XRf;RQOWi:KXGk6:goto ymfG5;e3XRf:}goto PKaR0;jvz3d:$arrPage = [['name' => '商品購入(Amazon Pay)', 'url' => 'amazon_pay_shopping', 'file_name' => 'Shopping/index'], ['name' => '商品購入(Amazon Pay)/ご注文確認', 'url' => 'amazon_pay_shopping_confirm', 'file_name' => 'Shopping/confirm']];goto ITuL6;CUigV:$entityManage = $serviceContainer->get('doctrine.orm.entity_manager');goto k_vuF;I_nTZ:}public function createPlgAmazonPayConfig(ContainerInterface $serviceContainer){goto CHiRm;JFwlp:$Config = $entityManage->find(Config::class, 1);goto MANV8;GUXKL:$Config->setCartButtonPlace(Master::CART_BUTTON_PLACE['AUTO']);goto LB8y8;mGku3:$Config->setAmazonAccountMode(Master::ACCOUNT_MODE['SHARED']);goto MDQY_;A8GXk:$amazonPayEnvs = $serviceContainer->getParameter('amazon_pay_v2')['env'];goto Vc2U5;MDQY_:$Config->setEnv(Master::ENV['SANDBOX']);goto IS02I;C2HBW:$entityManage->flush($Config);goto ZtaZ_;Vc2U5:if (in_array($Config->getEnv(), $amazonPayEnvs)) {goto ozNxF;}goto zFLG1;LB8y8:$Config->setUseMypageLoginButton(false);goto QFabk;Bt2JN:$Config->setLoginRequired(false);goto ZcMx0;tYcR1:$firstBannerOnCart = $bannerRepository->findOneBy(['page' => AmazonBanner::PAGE_CART, 'isDefault' => true]);goto vlKX2;FC7Dl:$Config->setMypageLoginButtonPlace(Master::MYPAGE_LOGIN_BUTTON_PLACE['AUTO']);goto P17lQ;vlKX2:$Config = new Config();goto mGku3;RDGy5:$Config->setAmazonAccountMode(2);goto c3uOf;UVAnW:$Config->setAutoLogin(true);goto Bt2JN;ayKdk:ozNxF:goto RDGy5;cPl4_:$Config->setAmazonBannerSizeOnTop($firstBannerOnTop->getId());goto j1frz;c3uOf:bV_q6:goto AZUsf;MXyHr:$Config->setUseCartButton(true);goto WMupA;j1frz:$Config->setAmazonBannerSizeOnCart($firstBannerOnCart->getId());goto MrC18;MrC18:$entityManage->persist($Config);goto C2HBW;d1v2G:$Config->setAmazonAccountMode(1);goto GAmE1;zFLG1:$Config->setEnv(1);goto d1v2G;GAmE1:goto bV_q6;goto ayKdk;IS02I:$Config->setPrivateKeyPath('app/PluginData/AmazonPayV2_42/AmazonPay_*.pem');goto IYPGT;IpX71:$Config->setUseConfirmPage(false);goto UVAnW;QFabk:$Config->setMypageLoginButtonColor('Gold');goto FC7Dl;G0s59:xrHbw:goto ULiQp;AZUsf:$entityManage->flush();goto eOjfb;IYPGT:$Config->setSale(Master::SALE['AUTORI']);goto IpX71;P17lQ:$Config->setUseAmazonBannerOnTop(true);goto Bqsva;ULiQp:$bannerRepository = $entityManage->getRepository(AmazonBanner::class);goto hfdUu;CHiRm:$entityManage = $serviceContainer->get('doctrine.orm.entity_manager');goto JFwlp;MANV8:if (!$Config) {goto xrHbw;}goto A8GXk;hfdUu:$firstBannerOnTop = $bannerRepository->findOneBy(['page' => AmazonBanner::PAGE_TOP, 'isDefault' => true]);goto tYcR1;ZcMx0:$Config->setOrderCorrect(true);goto VLZdp;Bqsva:$Config->setUseAmazonBannerOnCart(true);goto cPl4_;WMupA:$Config->setCartButtonColor('Gold');goto GUXKL;VLZdp:$Config->setMailNotices(null);goto MXyHr;eOjfb:return;goto G0s59;ZtaZ_:}public function createPlgAmazonPayStatus(ContainerInterface $serviceContainer){goto zUgy4;CPOqa:$i = 0;goto LGONt;LGONt:foreach ($statuses as $id => $name) {goto PUeUc;s5Yy0:$AmazonStatus->setId($id);goto YkWSt;ih3gD:goto d3Z82;goto wh_Az;PUeUc:$AmazonStatus = $entityManage->find(AmazonStatus::class, $id);goto dVaDm;YkWSt:$AmazonStatus->setName($name);goto VMbHL;wh_Az:V_OQF:goto yCz0o;yCz0o:$AmazonStatus = new AmazonStatus();goto s5Yy0;FAVel:$entityManage->persist($AmazonStatus);goto hb7Mq;dsrER:d3Z82:goto jBc07;hb7Mq:$entityManage->flush($AmazonStatus);goto dsrER;dVaDm:if (!$AmazonStatus) {goto V_OQF;}goto ih3gD;VMbHL:$AmazonStatus->setSortNo($i++);goto FAVel;jBc07:}goto rZc1L;zUgy4:$entityManage = $serviceContainer->get('doctrine.orm.entity_manager');goto az9of;rZc1L:VRo64:goto protA;az9of:$statuses = [AmazonStatus::AUTHORI => 'オーソリ', AmazonStatus::CAPTURE => '売上', AmazonStatus::CANCEL => '取消'];goto CPOqa;protA:}public function createPlgAmazonPayBanner(ContainerInterface $container){goto RcuIM;guUa5:$entityManage->persist($Config);goto aOMfJ;I_qK6:$tmp = $Config->getAmazonBannerSizeOnCart();goto eEKxl;UtuKu:$tmp = $Config->getUseAmazonBannerOnCart();goto EOhUK;LfnOI:foreach ($banners as $key => $value) {goto rIYpT;rIYpT:$record = $amazonBannerRepository->findOneBy(['name' => $key, 'page' => AmazonBanner::PAGE_CART]);goto ZUyMD;LyCAs:$entityManage->flush($AmazonBanner);goto YmA_P;DVZ2f:$AmazonBanner->setCode($code);goto WRfLs;zH1Wo:            $code = '    <script>' . '        $(function () {' . '            /* ボタンを設置 */' . '            $("div#AmazonBanner").append($("div#div_AmazonBanner"));' . '        });' . '    </script>' . '    ' . '    <div class="hidden">' . '        <div id="div_AmazonBanner">' . $value . '        </div>' . '    </div>';
goto ApxK7;A61zh:$AmazonBanner = new AmazonBanner();goto zH1Wo;IU288:$AmazonBanner->setName($key);goto DVZ2f;AhnQK:$entityManage->persist($AmazonBanner);goto LyCAs;WRfLs:if (!($key == '1000x120')) {goto zrfYw;}goto tIMa7;tIMa7:$AmazonBanner->setIsDefault(true);goto DiZ6N;ZUyMD:if (!isset($record)) {goto IT4pP;}goto l6UfX;YmA_P:FQhOr:goto oje02;l6UfX:goto FQhOr;goto TEU08;TEU08:IT4pP:goto A61zh;DiZ6N:zrfYw:goto AhnQK;ApxK7:$AmazonBanner->setPage(AmazonBanner::PAGE_CART);goto IU288;oje02:}goto VWB8D;RcuIM:$entityManage = $container->get('doctrine.orm.entity_manager');goto WbbCV;y6Lsu:jFx3F:goto I_qK6;V_VIF:$firstBannerOnCart = $amazonBannerRepository->findOneBy(['page' => AmazonBanner::PAGE_CART, 'isDefault' => true]);goto g5_O5;ZCwg_:$firstBannerOnTop = $amazonBannerRepository->findOneBy(['page' => AmazonBanner::PAGE_TOP, 'isDefault' => true]);goto V_VIF;eqZbm:$Config->setAmazonBannerSizeOnCart($firstBannerOnCart->getId());goto CvE_E;wh6q4:XwBv5:goto UtuKu;ZKlzH:$amazonBannerRepository = $entityManage->getRepository(AmazonBanner::class);goto ZNB0Z;Vl0aO:$Config->setAmazonBannerSizeOnTop($firstBannerOnTop->getId());goto y6Lsu;WbbCV:$banners = ['728x90' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/01_Amazon_Pay_BBP_728x90.png?merchantId={{MERCHANT_ID}}"/></a>', '710x160' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/02_Amazon_Pay_BBP_710x160.png?merchantId={{MERCHANT_ID}}"/></a>', '700x350' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/03_Amazon_Pay_BBP_700x350.png?merchantId={{MERCHANT_ID}}"/></a>', '660x660' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/04_Amazon_Pay_BBP_660x660.png?merchantId={{MERCHANT_ID}}"/></a>', '640x100' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/05_Amazon_Pay_BBP_640x100.png?merchantId={{MERCHANT_ID}}"/></a>', '590x354' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/06_Amazon_Pay_BBP_590x354.png?merchantId={{MERCHANT_ID}}"/></a>', '336x280' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/07_Amazon_Pay_BBP_336x280.png?merchantId={{MERCHANT_ID}}"/></a>', '320x100' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/08_Amazon_Pay_BBP_320x100.png?merchantId={{MERCHANT_ID}}"/></a>', '320x50' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/09_Amazon_Pay_BBP_320x50.png?merchantId={{MERCHANT_ID}}"/></a>', '300x250' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/10_Amazon_Pay_BBP_300x250.png?merchantId={{MERCHANT_ID}}"/></a>', '250x250' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/11_Amazon_Pay_BBP_250x250.png?merchantId={{MERCHANT_ID}}"/></a>', '160x600' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/12_Amazon_Pay_BBP_160x600.png?merchantId={{MERCHANT_ID}}"/></a>', '1500x750' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/13_Amazon_Pay_BBP_1500x750.png?merchantId={{MERCHANT_ID}}"/></a>', '1000x120' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/14_Amazon_Pay_BBP_1000x120.png?merchantId={{MERCHANT_ID}}"/></a>', '990x200' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/15_Amazon_Pay_BBP_990x200.png?merchantId={{MERCHANT_ID}}"/></a>', '750x750' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/16_Amazon_Pay_BBP_750x750.png?merchantId={{MERCHANT_ID}}"/></a>', '750x220' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/17_Amazon_Pay_BBP_750x220.png?merchantId={{MERCHANT_ID}}"/></a>', '737x128' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/18_Amazon_Pay_BBP_737x128.png?merchantId={{MERCHANT_ID}}"/></a>', '120x76' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/19_Amazon_Pay_BBP_120x76.png?merchantId={{MERCHANT_ID}}"/></a>', '240x76' => '<a href="https://d3kgdxn2e6m290.cloudfront.net?merchantId={{MERCHANT_ID}}" target="_blank"><img src="https://dr29ns64eselm.cloudfront.net/20_Amazon_Pay_BBP_240x76.png?merchantId={{MERCHANT_ID}}"/></a>'];goto ZKlzH;eEKxl:if (!(!isset($tmp) || $tmp == 0)) {goto fLp2h;}goto eqZbm;CvE_E:fLp2h:goto guUa5;xvn1W:zhrfZ:goto EeZ7T;VWB8D:h_Wj1:goto CYrKL;z7JFi:if (!$Config) {goto eUZgS;}goto ZCwg_;g5_O5:$tmp = $Config->getUseAmazonBannerOnTop();goto JAHE9;ZNB0Z:foreach ($banners as $key => $value) {goto FJJHd;TKCID:            $code = '    <script>' . '        $(function () {' . '            /* ボタンを設置 */' . '            $("div#AmazonBanner").append($("div#div_AmazonBanner"));' . '        });' . '    </script>' . '    ' . '    <div class="hidden">' . '        <div id="div_AmazonBanner">' . $value . '        </div>' . '    </div>';
goto mBLSI;nnYBZ:AyBMv:goto Ec9K8;FJJHd:$record = $amazonBannerRepository->findOneBy(['name' => $key, 'page' => AmazonBanner::PAGE_TOP]);goto Pi1yR;iONyt:wvenx:goto g43F7;JQ6YC:if (!($key == '1000x120')) {goto wvenx;}goto ZKbYf;ZKbYf:$AmazonBanner->setIsDefault(true);goto iONyt;woJde:$AmazonBanner->setCode($code);goto JQ6YC;mBLSI:$AmazonBanner->setPage(AmazonBanner::PAGE_TOP);goto fKGsM;YVFJI:goto HGuzr;goto nnYBZ;cmEDd:$entityManage->flush($AmazonBanner);goto W48NV;fKGsM:$AmazonBanner->setName($key);goto woJde;W48NV:HGuzr:goto rzQXm;Pi1yR:if (!isset($record)) {goto AyBMv;}goto YVFJI;g43F7:$entityManage->persist($AmazonBanner);goto cmEDd;Ec9K8:$AmazonBanner = new AmazonBanner();goto TKCID;rzQXm:}goto vuTmx;JAHE9:if (isset($tmp)) {goto XwBv5;}goto GQYYP;NgM_Y:eUZgS:goto C0wpr;cwdJQ:if (!(!isset($tmp) || $tmp == 0)) {goto jFx3F;}goto Vl0aO;EeZ7T:$tmp = $Config->getAmazonBannerSizeOnTop();goto cwdJQ;GQYYP:$Config->setUseAmazonBannerOnTop(true);goto wh6q4;AwwEi:$Config->setUseAmazonBannerOnCart(true);goto xvn1W;CYrKL:$Config = $entityManage->find(Config::class, 1);goto z7JFi;EOhUK:if (isset($tmp)) {goto zhrfZ;}goto AwwEi;vuTmx:oeSFW:goto LfnOI;aOMfJ:$entityManage->flush($Config);goto NgM_Y;C0wpr:}private function copyAssets(ContainerInterface $serviceContainer){goto Y8XRj;vslnc:$file->mirror($this->origin_css, $this->target_css);goto V6BWa;Y8XRj:$file = new Filesystem();goto IveGB;IveGB:$file->mkdir($this->target_css);goto vslnc;V6BWa:}private function removeAssets(ContainerInterface $serviceContainer){$file = new Filesystem();$file->remove($this->target_css . '/amazon_shopping_v2.css');}private function updateAssets(ContainerInterface $serviceContainer){goto nEUSQ;ugP9U:$file->copy($this->origin_css . '/amazon_shopping_v2.css', $this->target_css . '/amazon_shopping_v2.css');goto zIzu7;n9Fo1:$file->copy($this->origin_plugin_data . '/lastNameList.csv', $this->target_plugin_data . '/lastNameList.csv');goto vP5yI;vP5yI:xOhHQ:goto Cxsc5;nEUSQ:$file = new Filesystem();goto EYdZG;EYdZG:if ($file->exists($this->target_plugin_data . '/lastNameList.csv')) {goto xOhHQ;}goto n9Fo1;Cxsc5:$file->remove($this->target_css . '/amazon_shopping_v2.css');goto ugP9U;zIzu7:}public function sendAutoMail($config, $serviceContainer, $process){goto kaHO2;SnixB:$message->subject('[' . $BaseInfo->getShopName() . '] ' . 'プラグイン' . $process . '処理のお知らせ【Amazon Pay V2】')->from(new Address($BaseInfo->getEmail03(), $BaseInfo->getShopName()))->to(new Address('amazon@iplogic.co.jp', 'amazon'))->text($body);goto m3MPR;kaHO2:$entityManage = $serviceContainer->get('doctrine.orm.entity_manager');goto P3eBb;ar_XS:if (!(isset($_SERVER['HTTP_HOST']) && isset($_SERVER['REQUEST_URI']))) {goto r56pg;}goto iphYu;RUxur:$mailer->send($message);goto drAN7;gwwbu:$BaseInfo = $baseInfoRepository->get();goto wbNL6;zkcaH:r56pg:goto gMCKG;QHUwR:$url = substr($url, 0, strrpos($url, 'store') - 1);goto aX3xE;ts1Rd:$message = new Email();goto SnixB;gMCKG:$datetime = date('Y-m-d H:i:s');goto DNSSK;OCtKR:$mailer = new Mailer($transport);goto RUxur;iphYu:$url = "http://" . $_SERVER["HTTP_HOST"] . $_SERVER['REQUEST_URI'];goto QHUwR;bl6rr:$plugin_version = $config['version'];goto nOT5i;aX3xE:$url = substr($url, 0, strrpos($url, '/') + 1);goto zkcaH;nOT5i:        $body = <<<__EOS__
Amazon Pay プラグインサポート各位

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
■　プラグイン{$process}のお知らせ　■
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

以下のECサイトでAmazon Pay V2 プラグインが{$process}されました。

【店名】{$BaseInfo->getShopName()}
【EC-CUBE】{$version}
【プラグイン】{$plugin_version}
【URL】{$url}
【メールアドレス】{$BaseInfo->getEmail01()}
【処理日時】{$datetime}


※本メールは、配信専用です。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Amazon Pay　プラグインサポート
URL：https://www.iplogic.co.jp/lp/amazonpayments.html
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
__EOS__;
goto ts1Rd;wbNL6:$url = '';goto ar_XS;m3MPR:$transport = Transport::fromDsn($serviceContainer->getParameter('eccube_mailer_dsn'));goto OCtKR;DNSSK:$version = Constant::VERSION;goto bl6rr;P3eBb:$baseInfoRepository = $entityManage->getRepository(BaseInfo::class);goto gwwbu;drAN7:}private function setConfigIni(){goto hHpC9;hHpC9:$eccubePlatform = env('ECCUBE_PLATFORM');goto cPsbA;Becfk:return;goto vs2Dx;cPsbA:if ($eccubePlatform === 'ec-cube.co') {goto NK25L;}goto Becfk;Nrcl9:file_put_contents(__DIR__ . '/amazon_pay_config.ini', "prefix = '{$rand}'");goto o9rfm;MIfb5:$rand = \Eccube\Util\StringUtil::random();goto Nrcl9;vs2Dx:NK25L:goto MIfb5;o9rfm:}}